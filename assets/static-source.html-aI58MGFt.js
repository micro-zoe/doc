import{_ as p,r as e,o as c,c as o,d as s,e as a,b as l,a as n}from"./app-Js4EkCke.js";const i={},r=n('<h1 id="静态资源" tabindex="-1"><a class="header-anchor" href="#静态资源"><span>静态资源</span></a></h1><h2 id="资源路径自动补全" tabindex="-1"><a class="header-anchor" href="#资源路径自动补全"><span>资源路径自动补全</span></a></h2><p>是指对子应用相对地址的资源路径进行补全，以确保所有资源正常加载，它是<code>micro-app</code>默认提供的功能。</p><p>如：子应用中引用图片<code>/myapp/test.png</code>，在最终渲染时会补全为<code>http://localhost:8080/myapp/test.png</code></p><p>资源路径补全分为两个方面：</p><p><strong>1、针对资源标签</strong></p><p>如 <code>link、script、img</code></p><p><strong>2、针对css的远程资源</strong></p><p>如 <code>background-image、@font-face</code></p><p>自动补全有时会失效，因为一些框架和库在特定场景下创建的元素无法被拦截和处理，或者当关闭样式隔离和沙箱时，也会导致自动补全失效。</p><p>此时推荐使用下面<code>publicPath</code>方案解决。</p><h2 id="publicpath" tabindex="-1"><a class="header-anchor" href="#publicpath"><span>publicPath</span></a></h2><p><strong>如果自动补全失败，可以采用运行时publicPath方案解决。</strong></p>',13),u={href:"https://webpack.docschina.org/guides/public-path/#on-the-fly",target:"_blank",rel:"noopener noreferrer"},d=n(`<p><em>如果你已经设置了publicPath为带域名的绝对地址(如：https://xxx)，则忽略此章节</em></p><h4 id="设置方式" tabindex="-1"><a class="header-anchor" href="#设置方式"><span>设置方式</span></a></h4><p><strong>步骤1:</strong> 在子应用src目录下创建名称为<code>public-path.js</code>的文件，并添加如下内容</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// __MICRO_APP_ENVIRONMENT__和__MICRO_APP_PUBLIC_PATH__是由micro-app注入的全局变量</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>window<span class="token punctuation">.</span>__MICRO_APP_ENVIRONMENT__<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// eslint-disable-next-line</span>
  __webpack_public_path__ <span class="token operator">=</span> window<span class="token punctuation">.</span>__MICRO_APP_PUBLIC_PATH__
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>步骤2:</strong> 在子应用入口文件的<code>最顶部</code>引入<code>public-path.js</code></p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// entry</span>
<span class="token keyword">import</span> <span class="token string">&#39;./public-path&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="资源共享" tabindex="-1"><a class="header-anchor" href="#资源共享"><span>资源共享</span></a></h2><p>当多个子应用拥有相同的js或css资源，可以指定这些资源在多个子应用之间共享，在子应用加载时直接从缓存中提取数据，从而提高渲染效率和性能。</p><p>设置资源共享的方式有两种：</p><h4 id="方式一、globalassets" tabindex="-1"><a class="header-anchor" href="#方式一、globalassets"><span>方式一、globalAssets</span></a></h4><p>globalAssets用于设置全局共享资源，它和预加载的思路相同，在浏览器空闲时加载资源并放入缓存。</p><p>当子应用加载相同地址的js或css资源时，会直接从缓存中提取数据，从而提升渲染速度。</p><p><strong>使用方式</strong></p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// index.js</span>
<span class="token keyword">import</span> microApp <span class="token keyword">from</span> <span class="token string">&#39;@micro-zoe/micro-app&#39;</span>

microApp<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">globalAssets</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">js</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;js地址1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;js地址2&#39;</span><span class="token punctuation">,</span> <span class="token operator">...</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// js地址</span>
    <span class="token literal-property property">css</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;css地址1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;css地址2&#39;</span><span class="token punctuation">,</span> <span class="token operator">...</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// css地址</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="方式二、global-属性" tabindex="-1"><a class="header-anchor" href="#方式二、global-属性"><span>方式二、global 属性</span></a></h4><p>在link、script设置<code>global</code>属性会将文件提取为公共文件，共享给其它应用。</p><p>设置<code>global</code>属性后文件第一次加载会放入公共缓存，其它子应用加载相同的资源时直接从缓存中读取内容，从而提升渲染速度。</p><p><strong>使用方式</strong></p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stylesheet<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>xx.css<span class="token punctuation">&quot;</span></span> <span class="token attr-name">global</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>xx.js<span class="token punctuation">&quot;</span></span> <span class="token attr-name">global</span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="资源过滤" tabindex="-1"><a class="header-anchor" href="#资源过滤"><span>资源过滤</span></a></h2><p>当子应用不需要加载某个js或css，可以通过在link、script、style设置exclude属性过滤这些资源，当micro-app遇到带有exclude属性的元素会进行删除。</p><p><strong>使用方式</strong></p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stylesheet<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>xx.css<span class="token punctuation">&quot;</span></span> <span class="token attr-name">exclude</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>xx.js<span class="token punctuation">&quot;</span></span> <span class="token attr-name">exclude</span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">exclude</span><span class="token punctuation">&gt;</span></span><span class="token style"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,23);function k(m,g){const t=e("ExternalLinkIcon");return c(),o("div",null,[r,s("p",null,[a("这是由webpack提供的功能，会在运行时动态设置webpack.publicPath，详细配置参考webpack文档 "),s("a",u,[a("publicPath"),l(t)])]),d])}const v=p(i,[["render",k],["__file","static-source.html.vue"]]);export{v as default};
