import{_ as r,r as l,o as d,c as k,b as s,w as t,d as n,e as a,a as i}from"./app-Js4EkCke.js";const m={},v=i(`<h1 id="数据通信" tabindex="-1"><a class="header-anchor" href="#数据通信"><span>数据通信</span></a></h1><p><code>micro-app</code>提供了一套灵活的数据通信机制，方便主应用和子应用之间的数据传输。</p><p>主应用和子应用之间的通信是绑定的，主应用只能向指定的子应用发送数据，子应用只能向主应用发送数据，这种方式可以有效的避免数据污染，防止多个子应用之间相互影响。</p><p>同时我们也提供了全局通信，方便跨应用之间的数据通信。</p><h2 id="一、子应用获取来自主应用的数据" tabindex="-1"><a class="header-anchor" href="#一、子应用获取来自主应用的数据"><span>一、子应用获取来自主应用的数据</span></a></h2><p>有两种方式获取来自主应用的数据：</p><h4 id="方式1-直接获取数据" tabindex="-1"><a class="header-anchor" href="#方式1-直接获取数据"><span>方式1：直接获取数据</span></a></h4><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> data <span class="token operator">=</span> window<span class="token punctuation">.</span>microApp<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 返回主应用下发的data数据</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="方式2-绑定监听函数" tabindex="-1"><a class="header-anchor" href="#方式2-绑定监听函数"><span>方式2：绑定监听函数</span></a></h4><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * 绑定监听函数，监听函数只有在数据变化时才会触发
 * dataListener: 绑定函数
 * autoTrigger: 在初次绑定监听函数时如果有缓存数据，是否需要主动触发一次，默认为false
 * !!!重要说明: 因为子应用是异步渲染的，而主应用发送数据是同步的，
 * 如果在子应用渲染结束前主应用发送数据，则在绑定监听函数前数据已经发送，在初始化后不会触发绑定函数，
 * 但这个数据会放入缓存中，此时可以设置autoTrigger为true主动触发一次监听函数来获取数据。
 */</span>
window<span class="token punctuation">.</span>microApp<span class="token punctuation">.</span><span class="token function">addDataListener</span><span class="token punctuation">(</span><span class="token function-variable function">dataListener</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">data</span><span class="token operator">:</span> Object</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> any<span class="token punctuation">,</span> autoTrigger<span class="token operator">?</span><span class="token operator">:</span> boolean<span class="token punctuation">)</span>

<span class="token comment">// 解绑监听函数</span>
window<span class="token punctuation">.</span>microApp<span class="token punctuation">.</span><span class="token function">removeDataListener</span><span class="token punctuation">(</span><span class="token function-variable function">dataListener</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">data</span><span class="token operator">:</span> Object</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> any<span class="token punctuation">)</span>

<span class="token comment">// 清空当前子应用的所有绑定函数(全局数据函数除外)</span>
window<span class="token punctuation">.</span>microApp<span class="token punctuation">.</span><span class="token function">clearDataListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>使用方式：</strong></p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// 监听函数</span>
<span class="token keyword">function</span> <span class="token function">dataListener</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;来自主应用的数据&#39;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// 监听数据变化</span>
window<span class="token punctuation">.</span>microApp<span class="token punctuation">.</span><span class="token function">addDataListener</span><span class="token punctuation">(</span>dataListener<span class="token punctuation">)</span>

<span class="token comment">// 监听数据变化，初始化时如果有数据则主动触发一次</span>
window<span class="token punctuation">.</span>microApp<span class="token punctuation">.</span><span class="token function">addDataListener</span><span class="token punctuation">(</span>dataListener<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>

<span class="token comment">// 解绑监听函数</span>
window<span class="token punctuation">.</span>microApp<span class="token punctuation">.</span><span class="token function">removeDataListener</span><span class="token punctuation">(</span>dataListener<span class="token punctuation">)</span>

<span class="token comment">// 清空当前子应用的所有绑定函数(全局数据函数除外)</span>
window<span class="token punctuation">.</span>microApp<span class="token punctuation">.</span><span class="token function">clearDataListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="二、子应用向主应用发送数据" tabindex="-1"><a class="header-anchor" href="#二、子应用向主应用发送数据"><span>二、子应用向主应用发送数据</span></a></h2><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// dispatch只接受对象作为参数</span>
window<span class="token punctuation">.</span>microApp<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;子应用发送给主应用的数据&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>dispatch只接受对象作为参数，它发送的数据都会被缓存下来。</p><p>micro-app会遍历新旧值中的每个key判断值是否有变化，如果所有数据都相同则不会发送（注意：只会遍历第一层key），如果数据有变化则将<strong>新旧值进行合并</strong>后发送。</p><p>例如：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// 第一次发送数据，记入缓存值 {name: &#39;jack&#39;}，然后发送 </span>
window<span class="token punctuation">.</span>microApp<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;jack&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// 第二次发送数据，将新旧值合并为 {name: &#39;jack&#39;, age: 20}，记入缓存值，然后发送 </span>
window<span class="token punctuation">.</span>microApp<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// 第三次发送数据，新旧值合并为 {name: &#39;jack&#39;, age: 20}，与缓存值相同，不再发送</span>
window<span class="token punctuation">.</span>microApp<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="dispatch是异步执行的-多个dispatch会在下一帧合并为一次执行" tabindex="-1"><a class="header-anchor" href="#dispatch是异步执行的-多个dispatch会在下一帧合并为一次执行"><span>dispatch是异步执行的，多个dispatch会在下一帧合并为一次执行</span></a></h5><p>例如：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>window<span class="token punctuation">.</span>microApp<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;jack&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
window<span class="token punctuation">.</span>microApp<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// 上面的数据会在下一帧合并为对象{name: &#39;jack&#39;, age: 20}一次性发送给主应用</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="dispatch第二个参数为回调函数-它会在数据发送结束后执行" tabindex="-1"><a class="header-anchor" href="#dispatch第二个参数为回调函数-它会在数据发送结束后执行"><span>dispatch第二个参数为回调函数，它会在数据发送结束后执行</span></a></h5><p>例如：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>window<span class="token punctuation">.</span>microApp<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">city</span><span class="token operator">:</span> <span class="token string">&#39;HK&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;数据已经发送完成&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="当数据监听函数有返回值时-会作为dispatch回调函数的入参" tabindex="-1"><a class="header-anchor" href="#当数据监听函数有返回值时-会作为dispatch回调函数的入参"><span>当数据监听函数有返回值时，会作为dispatch回调函数的入参</span></a></h5><p>例如：</p><p><em>主应用：</em></p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> microApp <span class="token keyword">from</span> <span class="token string">&#39;@micro-zoe/micro-app&#39;</span>

microApp<span class="token punctuation">.</span><span class="token function">addDataListener</span><span class="token punctuation">(</span><span class="token string">&#39;my-app&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;来自子应用my-app的数据&#39;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span>

  <span class="token keyword">return</span> <span class="token string">&#39;返回值1&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

microApp<span class="token punctuation">.</span><span class="token function">addDataListener</span><span class="token punctuation">(</span><span class="token string">&#39;my-app&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;来自子应用my-app的数据&#39;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span>

  <span class="token keyword">return</span> <span class="token string">&#39;返回值2&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em>子应用：</em></p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// 返回值会放入数组中传递给dispatch的回调函数</span>
window<span class="token punctuation">.</span>microApp<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">city</span><span class="token operator">:</span> <span class="token string">&#39;HK&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">res</span><span class="token operator">:</span> any<span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token comment">// [&#39;返回值1&#39;, &#39;返回值2&#39;]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="forcedispatch-强制发送" tabindex="-1"><a class="header-anchor" href="#forcedispatch-强制发送"><span>forceDispatch：强制发送</span></a></h5><p>forceDispatch方法拥有和dispatch一样的参数和行为，唯一不同的是forceDispatch会强制发送数据，无论数据是否变化。</p><p>例如：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// 强制发送数据，无论缓存中是否已经存在 name: &#39;jack&#39; 的值</span>
window<span class="token punctuation">.</span>microApp<span class="token punctuation">.</span><span class="token function">forceDispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;jack&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;数据已经发送完成&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="三、主应用向子应用发送数据" tabindex="-1"><a class="header-anchor" href="#三、主应用向子应用发送数据"><span>三、主应用向子应用发送数据</span></a></h2><p>主应用向子应用发送数据有两种方式：</p><h4 id="方式1-通过data属性发送数据" tabindex="-1"><a class="header-anchor" href="#方式1-通过data属性发送数据"><span>方式1: 通过data属性发送数据</span></a></h4>`,39),b=n("p",null,"在React中我们需要引入一个polyfill。",-1),g=n("p",null,[a("在"),n("code",null,"<micro-app>"),a("元素所在的文件顶部添加polyfill"),n("code",null,"(注释也要复制)"),a("。")],-1),h=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js","data-title":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token doc-comment comment"},[a("/** "),n("span",{class:"token keyword"},"@jsxRuntime"),a(" classic */")]),a(`
`),n("span",{class:"token doc-comment comment"},[a("/** "),n("span",{class:"token keyword"},"@jsx"),a(" jsxCustomEvent */")]),a(`
`),n("span",{class:"token keyword"},"import"),a(" jsxCustomEvent "),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'@micro-zoe/micro-app/polyfill/jsx-custom-event'"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),j=n("p",null,[n("strong",null,"开始使用")],-1),f=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js","data-title":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token operator"},"<"),a("micro"),n("span",{class:"token operator"},"-"),a(`app
  name`),n("span",{class:"token operator"},"="),n("span",{class:"token string"},"'my-app'"),a(`
  url`),n("span",{class:"token operator"},"="),n("span",{class:"token string"},"'xx'"),a(`
  data`),n("span",{class:"token operator"},"="),n("span",{class:"token punctuation"},"{"),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),a("state"),n("span",{class:"token punctuation"},"."),a("dataForChild"),n("span",{class:"token punctuation"},"}"),a(),n("span",{class:"token comment"},"// data只接受对象类型，采用严格对比(===)，当传入新的data对象时会重新发送"),a(`
`),n("span",{class:"token operator"},"/"),n("span",{class:"token operator"},">"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),y=n("p",null,"vue中和绑定普通属性方式一致。",-1),_=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js","data-title":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token operator"},"<"),a("template"),n("span",{class:"token operator"},">"),a(`
  `),n("span",{class:"token operator"},"<"),a("micro"),n("span",{class:"token operator"},"-"),a(`app
    name`),n("span",{class:"token operator"},"="),n("span",{class:"token string"},"'my-app'"),a(`
    url`),n("span",{class:"token operator"},"="),n("span",{class:"token string"},"'xx'"),a(`
    `),n("span",{class:"token operator"},":"),a("data"),n("span",{class:"token operator"},"="),n("span",{class:"token string"},"'dataForChild'"),a(),n("span",{class:"token comment"},"// data只接受对象类型，数据变化时会重新发送"),a(`
  `),n("span",{class:"token operator"},"/"),n("span",{class:"token operator"},">"),a(`
`),n("span",{class:"token operator"},"<"),n("span",{class:"token operator"},"/"),a("template"),n("span",{class:"token operator"},">"),a(`

`),n("span",{class:"token operator"},"<"),a("script"),n("span",{class:"token operator"},">"),a(`
`),n("span",{class:"token keyword"},"export"),a(),n("span",{class:"token keyword"},"default"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token function"},"data"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token keyword"},"return"),a(),n("span",{class:"token punctuation"},"{"),a(`
      `),n("span",{class:"token literal-property property"},"dataForChild"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token literal-property property"},"type"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},"'发送给子应用的数据'"),n("span",{class:"token punctuation"},"}"),a(`
    `),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token operator"},"<"),n("span",{class:"token operator"},"/"),a("script"),n("span",{class:"token operator"},">"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),w=i(`<h4 id="方式2-手动发送数据" tabindex="-1"><a class="header-anchor" href="#方式2-手动发送数据"><span>方式2: 手动发送数据</span></a></h4><p>手动发送数据需要通过<code>name</code>指定接受数据的子应用，此值和<code>&lt;micro-app&gt;</code>元素中的<code>name</code>一致。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> microApp <span class="token keyword">from</span> <span class="token string">&#39;@micro-zoe/micro-app&#39;</span>

<span class="token comment">// 发送数据给子应用 my-app，setData第二个参数只接受对象类型</span>
microApp<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token string">&#39;my-app&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;新的数据&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>setData第一个参数为子应用名称，第二个参数为传递的数据，它发送的数据都会被缓存下来。</p><p>micro-app会遍历新旧值中的每个key判断值是否有变化，如果所有数据都相同则不会发送（注意：只会遍历第一层key），如果数据有变化则将<strong>新旧值进行合并</strong>后发送。</p><p>例如：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// 第一次发送数据，记入缓存值 {name: &#39;jack&#39;}，然后发送 </span>
microApp<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token string">&#39;my-app&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;jack&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// 第二次发送数据，将新旧值合并为 {name: &#39;jack&#39;, age: 20}，记入缓存值，然后发送 </span>
microApp<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token string">&#39;my-app&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// 第三次发送数据，新旧值合并为 {name: &#39;jack&#39;, age: 20}，与缓存值相同，不再发送</span>
microApp<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token string">&#39;my-app&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="setdata是异步执行的-多个setdata会在下一帧合并为一次执行" tabindex="-1"><a class="header-anchor" href="#setdata是异步执行的-多个setdata会在下一帧合并为一次执行"><span>setData是异步执行的，多个setData会在下一帧合并为一次执行</span></a></h5><p>例如：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>microApp<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token string">&#39;my-app&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;jack&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
microApp<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token string">&#39;my-app&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// 上面的数据会在下一帧合并为对象{name: &#39;jack&#39;, age: 20}一次性发送给子应用my-app</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="setdata第三个参数为回调函数-它会在数据发送结束后执行" tabindex="-1"><a class="header-anchor" href="#setdata第三个参数为回调函数-它会在数据发送结束后执行"><span>setData第三个参数为回调函数，它会在数据发送结束后执行</span></a></h5><p>例如：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>microApp<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token string">&#39;my-app&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">city</span><span class="token operator">:</span> <span class="token string">&#39;HK&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;数据已经发送完成&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="当数据监听函数有返回值时-会作为setdata回调函数的入参" tabindex="-1"><a class="header-anchor" href="#当数据监听函数有返回值时-会作为setdata回调函数的入参"><span>当数据监听函数有返回值时，会作为setData回调函数的入参</span></a></h5><p>例如：</p><p><em>子应用：</em></p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>window<span class="token punctuation">.</span>microApp<span class="token punctuation">.</span><span class="token function">addDataListener</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;来自主应用的数据&#39;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span>

  <span class="token keyword">return</span> <span class="token string">&#39;返回值1&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

window<span class="token punctuation">.</span>microApp<span class="token punctuation">.</span><span class="token function">addDataListener</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;来自主应用的数据&#39;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span>

  <span class="token keyword">return</span> <span class="token string">&#39;返回值2&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em>主应用：</em></p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// 返回值会放入数组中传递给setData的回调函数</span>
microApp<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token string">&#39;my-app&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">city</span><span class="token operator">:</span> <span class="token string">&#39;HK&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">res</span><span class="token operator">:</span> any<span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token comment">// [&#39;返回值1&#39;, &#39;返回值2&#39;]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="forcesetdata-强制发送" tabindex="-1"><a class="header-anchor" href="#forcesetdata-强制发送"><span>forceSetData：强制发送</span></a></h5><p>forceSetData方法拥有和setData一样的参数和行为，唯一不同的是forceSetData会强制发送数据，无论数据是否变化。</p><p>例如：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// 强制发送数据，无论缓存中是否已经存在 name: &#39;jack&#39; 的值</span>
microApp<span class="token punctuation">.</span><span class="token function">forceSetData</span><span class="token punctuation">(</span><span class="token string">&#39;my-app&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;jack&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;数据已经发送完成&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="四、主应用获取来自子应用的数据" tabindex="-1"><a class="header-anchor" href="#四、主应用获取来自子应用的数据"><span>四、主应用获取来自子应用的数据</span></a></h2><p>主应用获取来自子应用的数据有三种方式：</p><h4 id="方式1-直接获取数据-1" tabindex="-1"><a class="header-anchor" href="#方式1-直接获取数据-1"><span>方式1：直接获取数据</span></a></h4><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> microApp <span class="token keyword">from</span> <span class="token string">&#39;@micro-zoe/micro-app&#39;</span>

<span class="token keyword">const</span> childData <span class="token operator">=</span> microApp<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span>appName<span class="token punctuation">)</span> <span class="token comment">// 返回子应用的data数据</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="方式2-监听自定义事件-datachange" tabindex="-1"><a class="header-anchor" href="#方式2-监听自定义事件-datachange"><span>方式2: 监听自定义事件 (datachange)</span></a></h4>`,30),x=n("p",null,"在React中我们需要引入一个polyfill。",-1),D=n("p",null,[a("在"),n("code",null,"<micro-app>"),a("元素所在的文件顶部添加polyfill"),n("code",null,"(注释也要复制)"),a("。")],-1),A=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js","data-title":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token doc-comment comment"},[a("/** "),n("span",{class:"token keyword"},"@jsxRuntime"),a(" classic */")]),a(`
`),n("span",{class:"token doc-comment comment"},[a("/** "),n("span",{class:"token keyword"},"@jsx"),a(" jsxCustomEvent */")]),a(`
`),n("span",{class:"token keyword"},"import"),a(" jsxCustomEvent "),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'@micro-zoe/micro-app/polyfill/jsx-custom-event'"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),L=n("p",null,[n("strong",null,"开始使用")],-1),G=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js","data-title":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token operator"},"<"),a("micro"),n("span",{class:"token operator"},"-"),a(`app
  name`),n("span",{class:"token operator"},"="),n("span",{class:"token string"},"'my-app'"),a(`
  url`),n("span",{class:"token operator"},"="),n("span",{class:"token string"},"'xx'"),a(`
  `),n("span",{class:"token comment"},"// 数据在event.detail.data字段中，子应用每次发送数据都会触发datachange"),a(`
  onDataChange`),n("span",{class:"token operator"},"="),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"e"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(" console"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'来自子应用的数据：'"),n("span",{class:"token punctuation"},","),a(" e"),n("span",{class:"token punctuation"},"."),a("detail"),n("span",{class:"token punctuation"},"."),a("data"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token operator"},"/"),n("span",{class:"token operator"},">"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),C=n("p",null,"vue中监听方式和普通事件一致。",-1),T=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js","data-title":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token operator"},"<"),a("template"),n("span",{class:"token operator"},">"),a(`
  `),n("span",{class:"token operator"},"<"),a("micro"),n("span",{class:"token operator"},"-"),a(`app
    name`),n("span",{class:"token operator"},"="),n("span",{class:"token string"},"'my-app'"),a(`
    url`),n("span",{class:"token operator"},"="),n("span",{class:"token string"},"'xx'"),a(`
    `),n("span",{class:"token comment"},"// 数据在事件对象的detail.data字段中，子应用每次发送数据都会触发datachange"),a(`
    @datachange`),n("span",{class:"token operator"},"="),n("span",{class:"token string"},"'handleDataChange'"),a(`
  `),n("span",{class:"token operator"},"/"),n("span",{class:"token operator"},">"),a(`
`),n("span",{class:"token operator"},"<"),n("span",{class:"token operator"},"/"),a("template"),n("span",{class:"token operator"},">"),a(`

`),n("span",{class:"token operator"},"<"),a("script"),n("span",{class:"token operator"},">"),a(`
`),n("span",{class:"token keyword"},"export"),a(),n("span",{class:"token keyword"},"default"),a(),n("span",{class:"token punctuation"},"{"),a(`
  `),n("span",{class:"token literal-property property"},"methods"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token punctuation"},"{"),a(`
    `),n("span",{class:"token function"},"handleDataChange"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"e"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
      console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'来自子应用的数据：'"),n("span",{class:"token punctuation"},","),a(" e"),n("span",{class:"token punctuation"},"."),a("detail"),n("span",{class:"token punctuation"},"."),a("data"),n("span",{class:"token punctuation"},")"),a(`
    `),n("span",{class:"token punctuation"},"}"),a(`
  `),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`
`),n("span",{class:"token operator"},"<"),n("span",{class:"token operator"},"/"),a("script"),n("span",{class:"token operator"},">"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),z=i(`<p>注意：<code>datachange</code>绑定函数的返回值不会作为子应用dispatch回调函数的入参，它的返回值没有任何作用。</p><h4 id="方式3-绑定监听函数" tabindex="-1"><a class="header-anchor" href="#方式3-绑定监听函数"><span>方式3: 绑定监听函数</span></a></h4><p>绑定监听函数需要通过<code>name</code>指定子应用，此值和<code>&lt;micro-app&gt;</code>元素中的<code>name</code>一致。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> microApp <span class="token keyword">from</span> <span class="token string">&#39;@micro-zoe/micro-app&#39;</span>

<span class="token doc-comment comment">/**
 * 绑定监听函数
 * appName: 应用名称
 * dataListener: 绑定函数
 * autoTrigger: 在初次绑定监听函数时如果有缓存数据，是否需要主动触发一次，默认为false
 */</span>
microApp<span class="token punctuation">.</span><span class="token function">addDataListener</span><span class="token punctuation">(</span>appName<span class="token operator">:</span> string<span class="token punctuation">,</span> <span class="token function-variable function">dataListener</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">data</span><span class="token operator">:</span> Object</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> any<span class="token punctuation">,</span> autoTrigger<span class="token operator">?</span><span class="token operator">:</span> boolean<span class="token punctuation">)</span>

<span class="token comment">// 解绑监听指定子应用的函数</span>
microApp<span class="token punctuation">.</span><span class="token function">removeDataListener</span><span class="token punctuation">(</span>appName<span class="token operator">:</span> string<span class="token punctuation">,</span> <span class="token function-variable function">dataListener</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">data</span><span class="token operator">:</span> Object</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> any<span class="token punctuation">)</span>

<span class="token comment">// 清空所有监听指定子应用的函数</span>
microApp<span class="token punctuation">.</span><span class="token function">clearDataListener</span><span class="token punctuation">(</span>appName<span class="token operator">:</span> string<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>使用方式：</strong></p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> microApp <span class="token keyword">from</span> <span class="token string">&#39;@micro-zoe/micro-app&#39;</span>

<span class="token comment">// 监听函数</span>
<span class="token keyword">function</span> <span class="token function">dataListener</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;来自子应用my-app的数据&#39;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// 监听来自子应用my-app的数据</span>
microApp<span class="token punctuation">.</span><span class="token function">addDataListener</span><span class="token punctuation">(</span><span class="token string">&#39;my-app&#39;</span><span class="token punctuation">,</span> dataListener<span class="token punctuation">)</span>

<span class="token comment">// 解绑监听my-app子应用的函数</span>
microApp<span class="token punctuation">.</span><span class="token function">removeDataListener</span><span class="token punctuation">(</span><span class="token string">&#39;my-app&#39;</span><span class="token punctuation">,</span> dataListener<span class="token punctuation">)</span>

<span class="token comment">// 清空所有监听my-app子应用的函数</span>
microApp<span class="token punctuation">.</span><span class="token function">clearDataListener</span><span class="token punctuation">(</span><span class="token string">&#39;my-app&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="五、清空数据" tabindex="-1"><a class="header-anchor" href="#五、清空数据"><span>五、清空数据</span></a></h2><p>由于通信的数据会被缓存，即便子应用被卸载也不会清空，这可能会导致一些困扰，此时可以主动清空缓存数据来解决。</p>`,8),F=n("h4",{id:"方式一-配置项-clear-data",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#方式一-配置项-clear-data"},[n("span",null,"方式一：配置项 - clear-data")])],-1),N=n("ul",null,[n("li",null,[a("使用方式: "),n("code",null,"<micro-app clear-data></micro-app>")])],-1),O=n("p",null,[a("当设置了"),n("code",null,"clear-data"),a("，子应用卸载时会同时清空主应用发送给当前子应用，和当前子应用发送给主应用的数据。")],-1),S={href:"/zh/configure#destroy",target:"_blank",rel:"noopener noreferrer"},E=n("h4",{id:"方式二-手动清空-cleardata",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#方式二-手动清空-cleardata"},[n("span",null,"方式二：手动清空 - clearData")])],-1),H=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js","data-title":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"import"),a(" microApp "),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'@micro-zoe/micro-app'"),a(`

`),n("span",{class:"token comment"},"// 清空主应用发送给子应用 my-app 的数据"),a(`
microApp`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"clearData"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'my-app'"),n("span",{class:"token punctuation"},")"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),K=n("h4",{id:"方式一-手动清空-cleardata",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#方式一-手动清空-cleardata"},[n("span",null,"方式一：手动清空 - clearData")])],-1),R=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js","data-title":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token comment"},"// 清空当前子应用发送给主应用的数据"),a(`
window`),n("span",{class:"token punctuation"},"."),a("microApp"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"clearData"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),V=n("h2",{id:"全局数据通信",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#全局数据通信"},[n("span",null,"全局数据通信")])],-1),I=n("p",null,"全局数据通信会向主应用和所有子应用发送数据，在跨应用通信的场景中适用。",-1),B=n("h4",{id:"发送全局数据",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#发送全局数据"},[n("span",null,"发送全局数据")])],-1),M=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js","data-title":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"import"),a(" microApp "),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'@micro-zoe/micro-app'"),a(`

`),n("span",{class:"token comment"},"// setGlobalData只接受对象作为参数"),a(`
microApp`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setGlobalData"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),n("span",{class:"token literal-property property"},"type"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},"'全局数据'"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),P=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js","data-title":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token comment"},"// setGlobalData只接受对象作为参数"),a(`
window`),n("span",{class:"token punctuation"},"."),a("microApp"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setGlobalData"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),n("span",{class:"token literal-property property"},"type"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},"'全局数据'"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),q=n("p",null,"setGlobalData只接受对象作为参数，它发送的数据都会被缓存下来。",-1),J=n("p",null,[a("micro-app会遍历新旧值中的每个key判断值是否有变化，如果所有数据都相同则不会发送（注意：只会遍历第一层key），如果数据有变化则将"),n("strong",null,"新旧值进行合并"),a("后发送。")],-1),Q=n("p",null,"例如：",-1),U=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js","data-title":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token comment"},"// 第一次发送数据，记入缓存值 {name: 'jack'}，然后发送 "),a(`
microApp`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setGlobalData"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),n("span",{class:"token literal-property property"},"name"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},"'jack'"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),W=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js","data-title":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token comment"},"// 第二次发送数据，将新旧值合并为 {name: 'jack', age: 20}，记入缓存值，然后发送 "),a(`
microApp`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setGlobalData"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),n("span",{class:"token literal-property property"},"age"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token number"},"20"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),X=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js","data-title":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token comment"},"// 第三次发送数据，新旧值合并为 {name: 'jack', age: 20}，与缓存值相同，不再发送"),a(`
microApp`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setGlobalData"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),n("span",{class:"token literal-property property"},"age"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token number"},"20"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Y=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js","data-title":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token comment"},"// 第一次发送数据，记入缓存值 {name: 'jack'}，然后发送 "),a(`
window`),n("span",{class:"token punctuation"},"."),a("microApp"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setGlobalData"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),n("span",{class:"token literal-property property"},"name"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},"'jack'"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Z=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js","data-title":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token comment"},"// 第二次发送数据，将新旧值合并为 {name: 'jack', age: 20}，记入缓存值，然后发送 "),a(`
window`),n("span",{class:"token punctuation"},"."),a("microApp"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setGlobalData"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),n("span",{class:"token literal-property property"},"age"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token number"},"20"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),$=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js","data-title":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token comment"},"// 第三次发送数据，新旧值合并为 {name: 'jack', age: 20}，与缓存值相同，不再发送"),a(`
window`),n("span",{class:"token punctuation"},"."),a("microApp"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setGlobalData"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),n("span",{class:"token literal-property property"},"age"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token number"},"20"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),nn=n("h5",{id:"setglobaldata是异步执行的-多个setglobaldata会在下一帧合并为一次执行",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#setglobaldata是异步执行的-多个setglobaldata会在下一帧合并为一次执行"},[n("span",null,"setGlobalData是异步执行的，多个setGlobalData会在下一帧合并为一次执行")])],-1),an=n("p",null,"例如：",-1),sn=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js","data-title":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[a("microApp"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setGlobalData"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),n("span",{class:"token literal-property property"},"name"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},"'jack'"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`
microApp`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setGlobalData"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),n("span",{class:"token literal-property property"},"age"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token number"},"20"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`

`),n("span",{class:"token comment"},"// 上面的数据会在下一帧合并为对象{name: 'jack', age: 20}一次性发送给主应用"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),tn=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js","data-title":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[a("window"),n("span",{class:"token punctuation"},"."),a("microApp"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setGlobalData"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),n("span",{class:"token literal-property property"},"name"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},"'jack'"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`
window`),n("span",{class:"token punctuation"},"."),a("microApp"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setGlobalData"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),n("span",{class:"token literal-property property"},"age"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token number"},"20"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`

`),n("span",{class:"token comment"},"// 上面的数据会在下一帧合并为对象{name: 'jack', age: 20}一次性发送给主应用"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),en=n("h5",{id:"setglobaldata第二个参数为回调函数-它会在数据发送结束后执行",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#setglobaldata第二个参数为回调函数-它会在数据发送结束后执行"},[n("span",null,"setGlobalData第二个参数为回调函数，它会在数据发送结束后执行")])],-1),pn=n("p",null,"例如：",-1),on=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js","data-title":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[a("microApp"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setGlobalData"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),n("span",{class:"token literal-property property"},"city"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},"'HK'"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
  console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'数据已经发送完成'"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),cn=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js","data-title":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[a("window"),n("span",{class:"token punctuation"},"."),a("microApp"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setGlobalData"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),n("span",{class:"token literal-property property"},"city"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},"'HK'"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
  console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'数据已经发送完成'"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),ln=n("h5",{id:"当全局数据的监听函数有返回值时-会作为setglobaldata回调函数的入参",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#当全局数据的监听函数有返回值时-会作为setglobaldata回调函数的入参"},[n("span",null,"当全局数据的监听函数有返回值时，会作为setGlobalData回调函数的入参")])],-1),un=n("p",null,"例如：",-1),rn=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js","data-title":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[a("microApp"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"addGlobalDataListener"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"data"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
  console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'全局数据'"),n("span",{class:"token punctuation"},","),a(" data"),n("span",{class:"token punctuation"},")"),a(`

  `),n("span",{class:"token keyword"},"return"),a(),n("span",{class:"token string"},"'返回值1'"),a(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`

microApp`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"addGlobalDataListener"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"data"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
  console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'全局数据'"),n("span",{class:"token punctuation"},","),a(" data"),n("span",{class:"token punctuation"},")"),a(`

  `),n("span",{class:"token keyword"},"return"),a(),n("span",{class:"token string"},"'返回值2'"),a(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),dn=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js","data-title":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token comment"},"// 返回值会放入数组中传递给setGlobalData的回调函数"),a(`
microApp`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setGlobalData"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),n("span",{class:"token literal-property property"},"city"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},"'HK'"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token literal-property property"},"res"),n("span",{class:"token operator"},":"),a(" any"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]")]),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
  console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),a("res"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token comment"},"// ['返回值1', '返回值2']"),a(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),kn=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js","data-title":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[a("window"),n("span",{class:"token punctuation"},"."),a("microApp"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"addGlobalDataListener"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"data"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
  console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'全局数据'"),n("span",{class:"token punctuation"},","),a(" data"),n("span",{class:"token punctuation"},")"),a(`

  `),n("span",{class:"token keyword"},"return"),a(),n("span",{class:"token string"},"'返回值1'"),a(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`

window`),n("span",{class:"token punctuation"},"."),a("microApp"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"addGlobalDataListener"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"data"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
  console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'全局数据'"),n("span",{class:"token punctuation"},","),a(" data"),n("span",{class:"token punctuation"},")"),a(`

  `),n("span",{class:"token keyword"},"return"),a(),n("span",{class:"token string"},"'返回值2'"),a(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),mn=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js","data-title":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token comment"},"// 返回值会放入数组中传递给setGlobalData的回调函数"),a(`
window`),n("span",{class:"token punctuation"},"."),a("microApp"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setGlobalData"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),n("span",{class:"token literal-property property"},"city"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},"'HK'"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token literal-property property"},"res"),n("span",{class:"token operator"},":"),a(" any"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]")]),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
  console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),a("res"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token comment"},"// ['返回值1', '返回值2']"),a(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),vn=n("h5",{id:"forcesetglobaldata-强制发送",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#forcesetglobaldata-强制发送"},[n("span",null,"forceSetGlobalData：强制发送")])],-1),bn=n("p",null,"forceSetGlobalData方法拥有和setGlobalData一样的参数和行为，唯一不同的是forceSetGlobalData会强制发送数据，无论数据是否变化。",-1),gn=n("p",null,"例如：",-1),hn=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js","data-title":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token comment"},"// 强制发送数据，无论缓存中是否已经存在 name: 'jack' 的值"),a(`
microApp`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"forceSetGlobalData"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),n("span",{class:"token literal-property property"},"name"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},"'jack'"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
  console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'数据已经发送完成'"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),jn=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js","data-title":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token comment"},"// 强制发送数据，无论缓存中是否已经存在 name: 'jack' 的值"),a(`
window`),n("span",{class:"token punctuation"},"."),a("microApp"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"forceSetGlobalData"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),n("span",{class:"token literal-property property"},"name"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token string"},"'jack'"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(),n("span",{class:"token punctuation"},"{"),a(`
  console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'数据已经发送完成'"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),fn=n("h4",{id:"获取全局数据",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#获取全局数据"},[n("span",null,"获取全局数据")])],-1),yn=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js","data-title":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"import"),a(" microApp "),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'@micro-zoe/micro-app'"),a(`

`),n("span",{class:"token comment"},"// 直接获取数据"),a(`
`),n("span",{class:"token keyword"},"const"),a(" globalData "),n("span",{class:"token operator"},"="),a(" microApp"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getGlobalData"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token comment"},"// 返回全局数据"),a(`

`),n("span",{class:"token keyword"},"function"),a(),n("span",{class:"token function"},"dataListener"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"data"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
  console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'全局数据'"),n("span",{class:"token punctuation"},","),a(" data"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`

`),n("span",{class:"token doc-comment comment"},`/**
 * 绑定监听函数
 * dataListener: 绑定函数
 * autoTrigger: 在初次绑定监听函数时如果有缓存数据，是否需要主动触发一次，默认为false
 */`),a(`
microApp`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"addGlobalDataListener"),n("span",{class:"token punctuation"},"("),n("span",{class:"token function-variable function"},"dataListener"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token literal-property property"},"data"),n("span",{class:"token operator"},":"),a(" Object")]),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(" any"),n("span",{class:"token punctuation"},","),a(" autoTrigger"),n("span",{class:"token operator"},"?"),n("span",{class:"token operator"},":"),a(" boolean"),n("span",{class:"token punctuation"},")"),a(`

`),n("span",{class:"token comment"},"// 解绑监听函数"),a(`
microApp`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"removeGlobalDataListener"),n("span",{class:"token punctuation"},"("),n("span",{class:"token function-variable function"},"dataListener"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token literal-property property"},"data"),n("span",{class:"token operator"},":"),a(" Object")]),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(" any"),n("span",{class:"token punctuation"},")"),a(`

`),n("span",{class:"token comment"},"// 清空主应用绑定的所有全局数据监听函数"),a(`
microApp`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"clearGlobalDataListener"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),_n=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js","data-title":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token comment"},"// 直接获取数据"),a(`
`),n("span",{class:"token keyword"},"const"),a(" globalData "),n("span",{class:"token operator"},"="),a(" window"),n("span",{class:"token punctuation"},"."),a("microApp"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getGlobalData"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token comment"},"// 返回全局数据"),a(`

`),n("span",{class:"token keyword"},"function"),a(),n("span",{class:"token function"},"dataListener"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"data"),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token punctuation"},"{"),a(`
  console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'全局数据'"),n("span",{class:"token punctuation"},","),a(" data"),n("span",{class:"token punctuation"},")"),a(`
`),n("span",{class:"token punctuation"},"}"),a(`

`),n("span",{class:"token doc-comment comment"},`/**
 * 绑定监听函数
 * dataListener: 绑定函数
 * autoTrigger: 在初次绑定监听函数时如果有缓存数据，是否需要主动触发一次，默认为false
 */`),a(`
window`),n("span",{class:"token punctuation"},"."),a("microApp"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"addGlobalDataListener"),n("span",{class:"token punctuation"},"("),n("span",{class:"token function-variable function"},"dataListener"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token literal-property property"},"data"),n("span",{class:"token operator"},":"),a(" Object")]),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(" any"),n("span",{class:"token punctuation"},","),a(" autoTrigger"),n("span",{class:"token operator"},"?"),n("span",{class:"token operator"},":"),a(" boolean"),n("span",{class:"token punctuation"},")"),a(`

`),n("span",{class:"token comment"},"// 解绑监听函数"),a(`
window`),n("span",{class:"token punctuation"},"."),a("microApp"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"removeGlobalDataListener"),n("span",{class:"token punctuation"},"("),n("span",{class:"token function-variable function"},"dataListener"),n("span",{class:"token operator"},":"),a(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token literal-property property"},"data"),n("span",{class:"token operator"},":"),a(" Object")]),n("span",{class:"token punctuation"},")"),a(),n("span",{class:"token operator"},"=>"),a(" any"),n("span",{class:"token punctuation"},")"),a(`

`),n("span",{class:"token comment"},"// 清空当前子应用绑定的所有全局数据监听函数"),a(`
window`),n("span",{class:"token punctuation"},"."),a("microApp"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"clearGlobalDataListener"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),wn=n("h4",{id:"清空全局数据",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#清空全局数据"},[n("span",null,"清空全局数据")])],-1),xn=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js","data-title":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"import"),a(" microApp "),n("span",{class:"token keyword"},"from"),a(),n("span",{class:"token string"},"'@micro-zoe/micro-app'"),a(`

`),n("span",{class:"token comment"},"// 清空全局数据"),a(`
microApp`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"clearGlobalData"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Dn=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js","data-title":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token comment"},"// 清空全局数据"),a(`
window`),n("span",{class:"token punctuation"},"."),a("microApp"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"clearGlobalData"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),a(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),An=i(`<h2 id="关闭沙箱后的通信方式" tabindex="-1"><a class="header-anchor" href="#关闭沙箱后的通信方式"><span>关闭沙箱后的通信方式</span></a></h2><p>沙箱关闭后，子应用默认的通信功能失效，此时可以通过手动注册通信对象实现一致的功能。</p><p><strong>注册方式：在主应用中为子应用初始化通信对象</strong></p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> EventCenterForMicroApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@micro-zoe/micro-app&#39;</span>

<span class="token comment">// 注意：每个子应用根据appName单独分配一个通信对象</span>
window<span class="token punctuation">.</span>eventCenterForAppxx <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">EventCenterForMicroApp</span><span class="token punctuation">(</span>appName<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>子应用就可以通过注册的<code>eventCenterForAppxx</code>对象进行通信，其api和<code>window.microApp</code>一致，<em>主应用通信方式没有任何变化。</em></p><p><strong>子应用通信方式：</strong></p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// 直接获取数据</span>
<span class="token keyword">const</span> data <span class="token operator">=</span> window<span class="token punctuation">.</span>eventCenterForAppxx<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 返回data数据</span>

<span class="token keyword">function</span> <span class="token function">dataListener</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;来自主应用的数据&#39;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * 绑定监听函数
 * dataListener: 绑定函数
 * autoTrigger: 在初次绑定监听函数时如果有缓存数据，是否需要主动触发一次，默认为false
 */</span>
window<span class="token punctuation">.</span>eventCenterForAppxx<span class="token punctuation">.</span><span class="token function">addDataListener</span><span class="token punctuation">(</span><span class="token function-variable function">dataListener</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">data</span><span class="token operator">:</span> Object</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> any<span class="token punctuation">,</span> autoTrigger<span class="token operator">?</span><span class="token operator">:</span> boolean<span class="token punctuation">)</span>

<span class="token comment">// 解绑监听函数</span>
window<span class="token punctuation">.</span>eventCenterForAppxx<span class="token punctuation">.</span><span class="token function">removeDataListener</span><span class="token punctuation">(</span><span class="token function-variable function">dataListener</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">data</span><span class="token operator">:</span> Object</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> any<span class="token punctuation">)</span>

<span class="token comment">// 清空当前子应用的所有绑定函数(全局数据函数除外)</span>
window<span class="token punctuation">.</span>eventCenterForAppxx<span class="token punctuation">.</span><span class="token function">clearDataListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// 子应用向主应用发送数据，只接受对象作为参数</span>
window<span class="token punctuation">.</span>eventCenterForAppxx<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;子应用发送的数据&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7);function Ln(Gn,Cn){const p=l("TabPanel"),c=l("Tabs"),u=l("ExternalLinkIcon"),e=l("CodeGroupItem"),o=l("CodeGroup");return d(),k("div",null,[v,s(c,null,{default:t(()=>[s(p,{title:"React"},{default:t(()=>[b,g,h,j,f]),_:1}),s(p,{title:"Vue"},{default:t(()=>[y,_]),_:1})]),_:1}),w,s(c,null,{default:t(()=>[s(p,{title:"React"},{default:t(()=>[x,D,A,L,G]),_:1}),s(p,{title:"Vue"},{default:t(()=>[C,T]),_:1})]),_:1}),z,s(c,null,{default:t(()=>[s(p,{title:"主应用"},{default:t(()=>[F,N,O,n("p",null,[n("a",S,[a("destroy"),s(u)]),a("也有同样的效果。")]),E,H]),_:1}),s(p,{title:"子应用"},{default:t(()=>[K,R]),_:1})]),_:1}),V,I,B,s(o,null,{default:t(()=>[s(e,{title:"主应用"},{default:t(()=>[M]),_:1}),s(e,{title:"子应用"},{default:t(()=>[P]),_:1})]),_:1}),q,J,Q,s(c,null,{default:t(()=>[s(p,{title:"主应用"},{default:t(()=>[U,W,X]),_:1}),s(p,{title:"子应用"},{default:t(()=>[Y,Z,$]),_:1})]),_:1}),nn,an,s(o,null,{default:t(()=>[s(e,{title:"主应用"},{default:t(()=>[sn]),_:1}),s(e,{title:"子应用"},{default:t(()=>[tn]),_:1})]),_:1}),en,pn,s(o,null,{default:t(()=>[s(e,{title:"主应用"},{default:t(()=>[on]),_:1}),s(e,{title:"子应用"},{default:t(()=>[cn]),_:1})]),_:1}),ln,un,s(c,null,{default:t(()=>[s(p,{title:"主应用"},{default:t(()=>[rn,dn]),_:1}),s(p,{title:"子应用"},{default:t(()=>[kn,mn]),_:1})]),_:1}),vn,bn,gn,s(o,null,{default:t(()=>[s(e,{title:"主应用"},{default:t(()=>[hn]),_:1}),s(e,{title:"子应用"},{default:t(()=>[jn]),_:1})]),_:1}),fn,s(o,null,{default:t(()=>[s(e,{title:"主应用"},{default:t(()=>[yn]),_:1}),s(e,{title:"子应用"},{default:t(()=>[_n]),_:1})]),_:1}),wn,s(o,null,{default:t(()=>[s(e,{title:"主应用"},{default:t(()=>[xn]),_:1}),s(e,{title:"子应用"},{default:t(()=>[Dn]),_:1})]),_:1}),An])}const zn=r(m,[["render",Ln],["__file","data.html.vue"]]);export{zn as default};
