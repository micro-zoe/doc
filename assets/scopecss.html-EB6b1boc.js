import{_ as t,r as c,o as p,c as o,d as s,e as n,b as e,a as l}from"./app-Js4EkCke.js";const i={},d=l(`<h1 id="样式隔离" tabindex="-1"><a class="header-anchor" href="#样式隔离"><span>样式隔离</span></a></h1><h2 id="一、样式隔离" tabindex="-1"><a class="header-anchor" href="#一、样式隔离"><span>一、样式隔离</span></a></h2><p>MicroApp的样式隔离是默认开启的，开启后会以<code>&lt;micro-app&gt;</code>标签作为样式作用域，利用标签的<code>name</code>属性为每个样式添加前缀，将子应用的样式影响禁锢在当前标签区域。</p><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token selector">.test</span> <span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/* 转换为 */</span>
<span class="token selector">micro-app[name=xxx] .test</span> <span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>但基座应用的样式依然会对子应用产生影响，如果发生样式污染，推荐通过约定前缀或CSS Modules方式解决。</p><h2 id="二、禁用样式隔离" tabindex="-1"><a class="header-anchor" href="#二、禁用样式隔离"><span>二、禁用样式隔离</span></a></h2><p>禁用样式隔离分四个层次：</p><h4 id="_1、在所有应用中禁用" tabindex="-1"><a class="header-anchor" href="#_1、在所有应用中禁用"><span>1、在所有应用中禁用</span></a></h4><p>这主要通过<code>start</code>方法进行全局配置，设置后所有应用的样式隔离都会停止。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> microApp <span class="token keyword">from</span> <span class="token string">&#39;@micro-zoe/micro-app&#39;</span>

microApp<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">disableScopecss</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 默认值false</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果希望在某个应用中不受全局配置控制，可以设置<code>disableScopecss=&#39;false&#39;</code></p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>micro-app</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>xx<span class="token punctuation">&#39;</span></span> <span class="token attr-name">url</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>xx<span class="token punctuation">&#39;</span></span> <span class="token attr-name">disableScopecss</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>false<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>micro-app</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_2、在某一个应用中禁用" tabindex="-1"><a class="header-anchor" href="#_2、在某一个应用中禁用"><span>2、在某一个应用中禁用</span></a></h4><p>设置后，当前应用的所有css都不会进行样式隔离。</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>micro-app</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>xx<span class="token punctuation">&#39;</span></span> <span class="token attr-name">url</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>xx<span class="token punctuation">&#39;</span></span> <span class="token attr-name">disableScopecss</span> <span class="token attr-name">或</span> <span class="token attr-name">disable-scopecss</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>micro-app</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_3、在某一个文件中禁用" tabindex="-1"><a class="header-anchor" href="#_3、在某一个文件中禁用"><span>3、在某一个文件中禁用</span></a></h4><p>可以在你的css文件中使用以下格式的注释来禁用样式隔离：</p><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token comment">/*! scopecss-disable */</span>
<span class="token selector">.test1</span> <span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">/*! scopecss-enable */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>你也可以对指定的选择器禁用样式隔离:</p><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token comment">/*! scopecss-disable .test1, .test2 */</span>
<span class="token selector">.test1</span> <span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.test2</span> <span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> yellow<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.test3</span> <span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">/*! scopecss-enable */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果想在整个文件范围内禁用样式隔离，将 <code>/*! scopecss-disable */</code> 注释放在文件顶部：</p><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token comment">/*! scopecss-disable */</span>
...
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4、在某一行中禁用" tabindex="-1"><a class="header-anchor" href="#_4、在某一行中禁用"><span>4、在某一行中禁用</span></a></h4><p>在文件中使用以下格式的注释在某一特定的行上禁用样式隔离：</p><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token comment">/*! scopecss-disable-next-line */</span>
<span class="token selector">.test1</span> <span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.test2</span> <span class="token punctuation">{</span>
  <span class="token comment">/*! scopecss-disable-next-line */</span>
  <span class="token property">background</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>/test.png<span class="token punctuation">)</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,25),r={class:"custom-container note"},u=s("p",{class:"custom-container-title"},"Note",-1),m={href:"https://cssnano.co/",target:"_blank",rel:"noopener noreferrer"},k={href:"https://cssnano.co/docs/optimisations/discardcomments/",target:"_blank",rel:"noopener noreferrer"},v=s("p",null,"我们以cssnano为例，是因为它是PostCSS中使用最广泛的压缩插件，如果你使用了另外的压缩工具，请根据实际情况调整，防止build后的注释被删除。",-1),b=s("h2",{id:"三、shadowdom",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#三、shadowdom"},[s("span",null,"三、shadowDOM")])],-1),h=s("p",null,"shadowDOM具有更好的隔离性，但一些框架(如React)对shadowDOM的兼容性不好，请谨慎使用。",-1),g=s("p",null,"开启shadowDOM后，默认的样式隔离将失效。",-1),_={href:"/v0/zh/configure#shadowdom",target:"_blank",rel:"noopener noreferrer"};function x(f,y){const a=c("ExternalLinkIcon");return p(),o("div",null,[d,s("div",r,[u,s("p",null,[n("上述注释规则都以叹号开头(d/*! */)，这是因为在build时大部分项目会将css中的注释删除以压缩体积，叹号开头是"),s("a",m,[n("cssnano"),e(a)]),n("的一种规则，可以防止在build时注释被删除"),s("a",k,[n("discardcomments"),e(a)]),n("。")]),v]),b,h,g,s("p",null,[n("开启方式："),s("a",_,[n("shadowDOM"),e(a)])])])}const S=t(i,[["render",x],["__file","scopecss.html.vue"]]);export{S as default};
