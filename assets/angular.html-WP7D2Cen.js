import{_ as p,r as t,o,c,d as n,e as a,b as l,a as s}from"./app-Js4EkCke.js";const i={},r=s(`<h1 id="angular" tabindex="-1"><a class="header-anchor" href="#angular"><span>Angular</span></a></h1><p>本篇以<code>angular 11</code>作为案例介绍angular的接入方式，其它版本angular接入方式会在后续补充，如果你在使用时出现问题，请在github上提issue告知我们。</p><h2 id="作为基座应用" tabindex="-1"><a class="header-anchor" href="#作为基座应用"><span>作为基座应用</span></a></h2><p>我们强烈建议基座应用采用history模式，hash路由的基座应用只能加载hash路由的子应用，history模式的基座应用对这两种子应用都支持。</p><p>在以下案例中，我们默认基座的路由为history模式。</p><h4 id="_1、安装依赖" tabindex="-1"><a class="header-anchor" href="#_1、安装依赖"><span>1、安装依赖</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">npm</span> i @micro-zoe/micro-app <span class="token parameter variable">--save</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_2、在入口处引入" tabindex="-1"><a class="header-anchor" href="#_2、在入口处引入"><span>2、在入口处引入</span></a></h4><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// entry</span>
<span class="token keyword">import</span> microApp <span class="token keyword">from</span> <span class="token string">&#39;@micro-zoe/micro-app&#39;</span>

microApp<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3、增加对webcomponent的支持" tabindex="-1"><a class="header-anchor" href="#_3、增加对webcomponent的支持"><span>3、增加对WebComponent的支持</span></a></h4><p>在<code>app/app.module.ts</code>中添加 <code>CUSTOM_ELEMENTS_SCHEMA</code> 到 @NgModule.schemas</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// app/app.module.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> NgModule<span class="token punctuation">,</span> <span class="token constant">CUSTOM_ELEMENTS_SCHEMA</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/core&#39;</span><span class="token punctuation">;</span>

@<span class="token function">NgModule</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">schemas</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token constant">CUSTOM_ELEMENTS_SCHEMA</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4、分配一个路由给子应用" tabindex="-1"><a class="header-anchor" href="#_4、分配一个路由给子应用"><span>4、分配一个路由给子应用</span></a></h4><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// app/app-routing.module.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> NgModule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/core&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> RouterModule<span class="token punctuation">,</span> Routes <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/router&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> MyPage <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./my-page/my-page.component&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token literal-property property">routes</span><span class="token operator">:</span> Routes <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token comment">// 👇 非严格匹配，/my-page/* 都指向 MyPage 页面</span>
    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;my-page&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>
      <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;**&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">component</span><span class="token operator">:</span> MyPage
    <span class="token punctuation">}</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

@<span class="token function">NgModule</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">imports</span><span class="token operator">:</span> <span class="token punctuation">[</span>RouterModule<span class="token punctuation">.</span><span class="token function">forRoot</span><span class="token punctuation">(</span>routes<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">exports</span><span class="token operator">:</span> <span class="token punctuation">[</span>RouterModule<span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppRoutingModule</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4、在页面中嵌入子应用" tabindex="-1"><a class="header-anchor" href="#_4、在页面中嵌入子应用"><span>4、在页面中嵌入子应用</span></a></h4><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token comment">&lt;!-- app/my-page/my-page.component.html --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>子应用<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- 
    name(必传)：应用名称
    url(必传)：应用地址，会被自动补全为http://localhost:3000/index.html
    baseroute(可选)：基座应用分配给子应用的基础路由，就是上面的 \`/my-page\`
    --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>micro-app</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>app1<span class="token punctuation">&#39;</span></span> <span class="token attr-name">url</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>http://localhost:3000/<span class="token punctuation">&#39;</span></span> <span class="token attr-name">baseroute</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>/my-page<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>micro-app</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="作为子应用" tabindex="-1"><a class="header-anchor" href="#作为子应用"><span>作为子应用</span></a></h2><h4 id="_1、在基座应用中引入zone-js" tabindex="-1"><a class="header-anchor" href="#_1、在基座应用中引入zone-js"><span>1、在基座应用中引入<code>zone.js</code></span></a></h4><p>如果基座应用非angular，那么基座应用需要引入<code>zone.js</code>才能正确加载angular子应用。</p><p>步骤1、安装依赖</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>npm i zone.js --save
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>步骤2、在基座应用中引入zone.js</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token string">&#39;zone.js&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_2、设置跨域支持" tabindex="-1"><a class="header-anchor" href="#_2、设置跨域支持"><span>2、设置跨域支持</span></a></h4><p>angular官方脚手架创建的项目在开发环境下默认支持跨域访问，不需要特殊处理。</p><p>其它项目在<code>webpack-dev-server</code>中添加headers。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token string-property property">&#39;Access-Control-Allow-Origin&#39;</span><span class="token operator">:</span> <span class="token string">&#39;*&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3、关闭热更新" tabindex="-1"><a class="header-anchor" href="#_3、关闭热更新"><span>3、关闭热更新</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token string">&quot;scripts&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
  <span class="token string">&quot;start&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;ng serve --live-reload false&quot;</span>,
<span class="token punctuation">}</span>,
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4、设置基础路由-如果基座是history路由-子应用是hash路由-这一步可以省略" tabindex="-1"><a class="header-anchor" href="#_4、设置基础路由-如果基座是history路由-子应用是hash路由-这一步可以省略"><span>4、设置基础路由<code>(如果基座是history路由，子应用是hash路由，这一步可以省略)</code></span></a></h4><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// app/app-routing.module.ts</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> NgModule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/core&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> RouterModule<span class="token punctuation">,</span> Routes <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/router&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> <span class="token constant">APP_BASE_HREF</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@angular/common&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token literal-property property">routes</span><span class="token operator">:</span> Routes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

@<span class="token function">NgModule</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">imports</span><span class="token operator">:</span> <span class="token punctuation">[</span>RouterModule<span class="token punctuation">.</span><span class="token function">forRoot</span><span class="token punctuation">(</span>routes<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">exports</span><span class="token operator">:</span> <span class="token punctuation">[</span>RouterModule<span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token comment">// 👇 设置基础路由</span>
  <span class="token literal-property property">providers</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>
    <span class="token literal-property property">provide</span><span class="token operator">:</span> <span class="token constant">APP_BASE_HREF</span><span class="token punctuation">,</span>
    <span class="token comment">// @ts-ignore __MICRO_APP_BASE_ROUTE__ 为micro-app传入的基础路由</span>
    <span class="token literal-property property">useValue</span><span class="token operator">:</span> window<span class="token punctuation">.</span>__MICRO_APP_BASE_ROUTE__ <span class="token operator">||</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppRoutingModule</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5、设置-publicpath" tabindex="-1"><a class="header-anchor" href="#_5、设置-publicpath"><span>5、设置 publicPath</span></a></h4>`,32),u={href:"https://webpack.docschina.org/guides/public-path/#on-the-fly",target:"_blank",rel:"noopener noreferrer"},d=s(`<p><em>如果子应用不是webpack构建的，这一步可以省略。</em></p><p><strong>步骤1:</strong> 在子应用src目录下创建名称为<code>public-path.js</code>的文件，并添加如下内容</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// __MICRO_APP_ENVIRONMENT__和__MICRO_APP_PUBLIC_PATH__是由micro-app注入的全局变量</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>window<span class="token punctuation">.</span>__MICRO_APP_ENVIRONMENT__<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// eslint-disable-next-line</span>
  __webpack_public_path__ <span class="token operator">=</span> window<span class="token punctuation">.</span>__MICRO_APP_PUBLIC_PATH__
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>步骤2:</strong> 在子应用入口文件的<strong>最顶部</strong>引入<code>public-path.js</code></p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// entry</span>
<span class="token keyword">import</span> <span class="token string">&#39;./public-path&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_6、监听卸载" tabindex="-1"><a class="header-anchor" href="#_6、监听卸载"><span>6、监听卸载</span></a></h4><p>子应用被卸载时会接受到一个名为<code>unmount</code>的事件，在此可以进行卸载相关操作。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// main.ts</span>

<span class="token keyword">let</span> app <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token function">platformBrowserDynamic</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">bootstrapModule</span><span class="token punctuation">(</span>AppModule<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">res</span><span class="token operator">:</span> NgModuleRef<span class="token operator">&lt;</span>AppModule<span class="token operator">&gt;</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    app <span class="token operator">=</span> res
  <span class="token punctuation">}</span><span class="token punctuation">)</span>


<span class="token comment">// 监听卸载操作</span>
window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;unmount&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  app<span class="token punctuation">.</span><span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  app <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="实战案例" tabindex="-1"><a class="header-anchor" href="#实战案例"><span>实战案例</span></a></h2><p>以上介绍了angular如何接入微前端，但在实际使用中会涉及更多功能，如数据通信、路由跳转、打包部署，为此我们提供了一套案例，用于展示angular作为基座嵌入(或作为子应用被嵌入) react、vue、angular、vite、nextjs、nuxtjs等框架，在案例中我们使用尽可能少的代码实现尽可能多的功能。</p><p>案例地址：https://github.com/micro-zoe/micro-app-demo-0.x</p><h2 id="常见问题" tabindex="-1"><a class="header-anchor" href="#常见问题"><span>常见问题</span></a></h2><h4 id="_1、基座是react、nextjs应用-引入zone-js后导致micro-app元素生命周期异常" tabindex="-1"><a class="header-anchor" href="#_1、基座是react、nextjs应用-引入zone-js后导致micro-app元素生命周期异常"><span>1、基座是react、nextjs应用，引入zone.js后导致micro-app元素生命周期异常</span></a></h4><p><strong>解决方式：</strong> 在micro-app元素上设置destroy</p><h4 id="_2、-angular-material组件库样式失效" tabindex="-1"><a class="header-anchor" href="#_2、-angular-material组件库样式失效"><span>2、@angular/material组件库样式失效</span></a></h4><p><strong>解决方式：</strong> 关闭样式隔离</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>micro-app</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>xx<span class="token punctuation">&#39;</span></span> <span class="token attr-name">url</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>xx<span class="token punctuation">&#39;</span></span> <span class="token attr-name">disableScopecss</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>micro-app</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_3、通过micro-app数据通信修改angular组件数据后视图不更新" tabindex="-1"><a class="header-anchor" href="#_3、通过micro-app数据通信修改angular组件数据后视图不更新"><span>3、通过micro-app数据通信修改angular组件数据后视图不更新</span></a></h4><p><strong>原因：</strong> 因为在angular区域外调用了内部的代码(基座和子应用属于不同的angular区域)，angular无法知道状态发生了变化。</p><p><strong>解决方式：</strong> 通过<code>ngZone.run()</code>触发更改检测，具体方式如下：</p><p><img src="https://img14.360buyimg.com/imagetools/jfs/t1/207551/36/34684/49729/6523aee1F5efef0be/e50e6d782a223dc9.png" alt="angular-question3" title=":size=800"></p>`,21);function k(v,m){const e=t("ExternalLinkIcon");return o(),c("div",null,[r,n("p",null,[a("这一步借助了webpack的功能，避免子应用的静态资源使用相对地址时加载失败的情况，详情参考webpack文档 "),n("a",u,[a("publicPath"),l(e)])]),d])}const h=p(i,[["render",k],["__file","angular.html.vue"]]);export{h as default};
