import{_ as t,r as p,o as l,c as o,d as s,e as a,b as c,a as n}from"./app-Js4EkCke.js";const i={},r=n('<h1 id="配置项" tabindex="-1"><a class="header-anchor" href="#配置项"><span>配置项</span></a></h1><p>通过配置项，我们可以决定开启或关闭某些功能。</p><h2 id="name" tabindex="-1"><a class="header-anchor" href="#name"><span>name</span></a></h2><ul><li>Desc: <code>应用名称</code></li><li>Type: <code>string</code></li><li>Default: <code>必传参数</code></li><li>使用方式: <code>&lt;micro-app name=&#39;xx&#39;&gt;&lt;/micro-app&gt;</code></li><li>注意事项: 必须以字母开头，且不可以带有除中划线和下划线外的特殊符号</li></ul><p>每个<code>name</code>都对应一个应用，当多个应用同时渲染时，name不可以重复。</p><p>当<code>name</code>的值发生变化时，会卸载当前应用并重新渲染。</p><h2 id="url" tabindex="-1"><a class="header-anchor" href="#url"><span>url</span></a></h2><ul><li>Desc: <code>应用地址</code></li><li>Type: <code>string</code></li><li>Default: <code>必传参数</code></li><li>使用方式: <code>&lt;micro-app name=&#39;xx&#39; url=&#39;xx&#39;&gt;&lt;/micro-app&gt;</code></li></ul><p>基座应用和子应用本质是在同一个页面，这里的<code>url</code>只是html地址，子应用的路由还是基于浏览器地址。</p><p>当<code>url</code>的值发生变化时，会卸载当前应用并根据新的<code>url</code>值重新渲染。</p><h2 id="baseroute" tabindex="-1"><a class="header-anchor" href="#baseroute"><span>baseroute</span></a></h2><ul><li>Desc: <code>子应用的基础路由</code></li><li>Type: <code>string</code></li><li>Default: <code>&#39;&#39;</code></li><li>使用方式: <code>&lt;micro-app name=&#39;xx&#39; url=&#39;xx&#39; baseroute=&#39;/my-page/&#39;&gt;&lt;/micro-app&gt;</code></li></ul><p>在微前端环境下，子应用可以从window.__MICRO_APP_BASE_ROUTE__上获取baseroute的值，用于设置基础路由。</p><p>如果基座应用是history路由，子应用是hash路由，则不需要设置baseroute。</p><h2 id="inline" tabindex="-1"><a class="header-anchor" href="#inline"><span>inline</span></a></h2><ul><li>Desc: <code>是否使用内联script</code></li><li>Default: <code>false</code></li><li>使用方式: <code>&lt;micro-app name=&#39;xx&#39; url=&#39;xx&#39; inline&gt;&lt;/micro-app&gt;</code></li></ul><p>默认情况下，子应用的js会被提取并在后台运行，这会导致调试困难。</p><p>开启inline后，被提取的js会作为script标签插入应用中运行，在开发环境中更方便调试。</p><div class="custom-container note"><p class="custom-container-title">Note</p><p>开启inline后会稍微损耗性能，建议在开发环境中使用。</p></div><h2 id="destroy" tabindex="-1"><a class="header-anchor" href="#destroy"><span>destroy</span></a></h2><ul><li>Desc: <code>卸载时是否强制删除缓存资源</code></li><li>Default: <code>false</code></li><li>使用方式: <code>&lt;micro-app name=&#39;xx&#39; url=&#39;xx&#39; destroy&gt;&lt;/micro-app&gt;</code></li></ul><p>默认情况下，子应用被卸载后会缓存静态资源，以便在重新渲染时获得更好的性能。</p><p>开启destroy，子应用在卸载后会清空缓存资源，再次渲染时重新请求数据。</p><h2 id="disablescopecss" tabindex="-1"><a class="header-anchor" href="#disablescopecss"><span>disableScopecss</span></a></h2><ul><li>Desc: <code>禁用样式隔离</code></li><li>Default: <code>false</code></li><li>使用方式: <code>&lt;micro-app name=&#39;xx&#39; url=&#39;xx&#39; disableScopecss 或 disable-scopecss&gt;&lt;/micro-app&gt;</code></li></ul><p>禁用样式隔离可以提升页面渲染速度，在此之前，请确保各应用之间样式不会相互污染。</p><h2 id="disablesandbox" tabindex="-1"><a class="header-anchor" href="#disablesandbox"><span>disableSandbox</span></a></h2><ul><li>Desc: <code>禁用js沙箱</code></li><li>Default: <code>false</code></li><li>使用方式: <code>&lt;micro-app name=&#39;xx&#39; url=&#39;xx&#39; disableSandbox 或 disable-sandbox&gt;&lt;/micro-app&gt;</code></li></ul><p>禁用沙箱可能会导致一些不可预料的问题，通常情况不建议这样做。</p><div class="custom-container note"><p class="custom-container-title">Note</p><p>禁用沙箱后以下功能将失效:</p><ol><li>样式隔离</li><li>元素隔离</li><li>静态资源路径补全</li><li><code>__MICRO_APP_ENVIRONMENT__</code>、<code>__MICRO_APP_PUBLIC_PATH__</code>等全局变量</li><li>baseroute</li></ol></div><h2 id="ssr" tabindex="-1"><a class="header-anchor" href="#ssr"><span>ssr</span></a></h2><ul><li>Desc: <code>是否开启ssr模式</code></li><li>Type: <code>string(boolean)</code></li><li>Default: <code>false</code></li><li>使用方式: <code>&lt;micro-app name=&#39;xx&#39; url=&#39;xx&#39; ssr&gt;&lt;/micro-app&gt;</code></li><li>版本要求: <code>0.5.3及以上版本</code></li></ul><p>当子应用是ssr应用时，需要设置ssr属性，此时micro-app会根据ssr模式加载子应用。</p><h2 id="keep-alive" tabindex="-1"><a class="header-anchor" href="#keep-alive"><span>keep-alive</span></a></h2><ul><li>Desc: <code>是否开启keep-alive模式</code></li><li>Type: <code>string(boolean)</code></li><li>Default: <code>false</code></li><li>使用方式: <code>&lt;micro-app name=&#39;xx&#39; url=&#39;xx&#39; keep-alive&gt;&lt;/micro-app&gt;</code></li><li>版本要求: <code>0.6.0及以上版本</code></li></ul><p>开启keep-alive后，应用卸载时会进入缓存，而不是销毁它们，以便保留应用的状态和提升重复渲染的性能。</p>',36),u={href:"/v0/zh/configure#destroy",target:"_blank",rel:"noopener noreferrer"},d=n(`<h2 id="shadowdom" tabindex="-1"><a class="header-anchor" href="#shadowdom"><span>shadowDOM</span></a></h2><ul><li>Desc: <code>是否开启shadowDOM</code></li><li>Type: <code>string(boolean)</code></li><li>Default: <code>false</code></li><li>使用方式: <code>&lt;micro-app name=&#39;xx&#39; url=&#39;xx&#39; shadowDOM&gt;&lt;/micro-app&gt;</code></li></ul><p>shadowDOM具有更强的样式隔离能力，开启后，<code>&lt;micro-app&gt;</code>标签会成为一个真正的WebComponent。</p><p>但shadowDOM在React框架及一些UI库中的兼容不是很好，经常会出现一些不可预料的问题，除非你很清楚它会带来的问题并有信心解决，否则不建议使用。</p><h2 id="全局配置" tabindex="-1"><a class="header-anchor" href="#全局配置"><span>全局配置</span></a></h2><p>全局配置会影响每一个子应用，请小心使用！</p><p><strong>使用方式</strong></p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> microApp <span class="token keyword">from</span> <span class="token string">&#39;@micro-zoe/micro-app&#39;</span>

microApp<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">inline</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 默认值false</span>
  <span class="token literal-property property">destroy</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 默认值false</span>
  <span class="token literal-property property">disableScopecss</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 默认值false</span>
  <span class="token literal-property property">disableSandbox</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 默认值false</span>
  <span class="token literal-property property">shadowDOM</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 默认值false</span>
  <span class="token literal-property property">ssr</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 默认值false</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果希望在某个应用中不使用全局配置，可以单独配置关闭：</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>micro-app</span> 
  <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>xx<span class="token punctuation">&#39;</span></span> 
  <span class="token attr-name">url</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>xx<span class="token punctuation">&#39;</span></span> 
  <span class="token attr-name">inline</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>false<span class="token punctuation">&#39;</span></span>
  <span class="token attr-name">destroy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>false<span class="token punctuation">&#39;</span></span>
  <span class="token attr-name">disableScopecss</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>false<span class="token punctuation">&#39;</span></span>
  <span class="token attr-name">disableSandbox</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>false<span class="token punctuation">&#39;</span></span>
  <span class="token attr-name">shadowDOM</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>false<span class="token punctuation">&#39;</span></span>
  <span class="token attr-name">ssr</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>false<span class="token punctuation">&#39;</span></span>
<span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>micro-app</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="其它配置" tabindex="-1"><a class="header-anchor" href="#其它配置"><span>其它配置</span></a></h2><h3 id="global" tabindex="-1"><a class="header-anchor" href="#global"><span>global</span></a></h3><p>当多个子应用使用相同的js或css资源，在link、script设置<code>global</code>属性会将文件提取为公共文件，共享给其它应用。</p><p>设置<code>global</code>属性后文件第一次加载会放入公共缓存，其它子应用加载相同的资源时直接从缓存中读取内容，从而提升渲染速度。</p><p><strong>使用方式</strong></p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stylesheet<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>xx.css<span class="token punctuation">&quot;</span></span> <span class="token attr-name">global</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>xx.js<span class="token punctuation">&quot;</span></span> <span class="token attr-name">global</span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="globalassets" tabindex="-1"><a class="header-anchor" href="#globalassets"><span>globalAssets</span></a></h3><p>globalAssets用于设置全局共享资源，它和预加载的思路相同，在浏览器空闲时加载资源并放入缓存，提高渲染效率。</p><p>当子应用加载相同地址的js或css资源时，会直接从缓存中提取数据，从而提升渲染速度。</p><p><strong>使用方式</strong></p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// index.js</span>
<span class="token keyword">import</span> microApp <span class="token keyword">from</span> <span class="token string">&#39;@micro-zoe/micro-app&#39;</span>

microApp<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">globalAssets</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">js</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;js地址1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;js地址2&#39;</span><span class="token punctuation">,</span> <span class="token operator">...</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// js地址</span>
    <span class="token literal-property property">css</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;css地址1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;css地址2&#39;</span><span class="token punctuation">,</span> <span class="token operator">...</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// css地址</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="exclude-过滤元素" tabindex="-1"><a class="header-anchor" href="#exclude-过滤元素"><span>exclude(过滤元素)</span></a></h3><p>当子应用不需要加载某个js或css，可以通过在link、script、style设置exclude属性，当micro-app遇到带有exclude属性的元素会进行删除。</p><p><strong>使用方式</strong></p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stylesheet<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>xx.css<span class="token punctuation">&quot;</span></span> <span class="token attr-name">exclude</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>xx.js<span class="token punctuation">&quot;</span></span> <span class="token attr-name">exclude</span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">exclude</span><span class="token punctuation">&gt;</span></span><span class="token style"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ignore-忽略元素" tabindex="-1"><a class="header-anchor" href="#ignore-忽略元素"><span>ignore(忽略元素)</span></a></h3><p>当link、script、style元素具有ignore属性，micro-app不会处理它，元素将原封不动进行渲染。</p><p>使用场景例如：jsonp</p><p>jsonp会创建一个script元素加载数据，正常情况script会被拦截导致jsonp请求失败，此时可以给script元素添加ignore属性，跳过拦截。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// 修改jsonp方法，在创建script元素后添加ignore属性</span>
<span class="token keyword">const</span> script <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;script&#39;</span><span class="token punctuation">)</span>
script<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;ignore&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;true&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,30);function k(m,v){const e=p("ExternalLinkIcon");return l(),o("div",null,[r,s("p",null,[a("keep-alive的优先级小于"),s("a",u,[a("destroy"),c(e)]),a("，当两者同时存在时，keep-alive将失效。")]),d])}const g=t(i,[["render",k],["__file","configure.html.vue"]]);export{g as default};
