import{_ as r,r as p,o as u,c as d,b as a,w as e,a as c,d as n,e as s}from"./app-Js4EkCke.js";const k={},m=c(`<h1 id="数据通信" tabindex="-1"><a class="header-anchor" href="#数据通信"><span>数据通信</span></a></h1><p><code>micro-app</code>提供了一套灵活的数据通信机制，方便基座应用和子应用之间的数据传输。</p><p>正常情况下，基座应用和子应用之间的通信是绑定的，基座应用只能向指定的子应用发送数据，子应用只能向基座发送数据，这种方式可以有效的避免数据污染，防止多个子应用之间相互影响。</p><p>同时我们也提供了全局通信，方便跨应用之间的数据通信。</p><h2 id="一、子应用获取来自基座应用的数据" tabindex="-1"><a class="header-anchor" href="#一、子应用获取来自基座应用的数据"><span>一、子应用获取来自基座应用的数据</span></a></h2><p><code>micro-app</code>会向子应用注入名称为<code>microApp</code>的全局对象，子应用通过这个对象和基座应用进行数据交互。</p><p>有两种方式获取来自基座应用的数据：</p><h4 id="方式1-直接获取数据" tabindex="-1"><a class="header-anchor" href="#方式1-直接获取数据"><span>方式1：直接获取数据</span></a></h4><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> data <span class="token operator">=</span> window<span class="token punctuation">.</span>microApp<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 返回基座下发的data数据</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="方式2-绑定监听函数" tabindex="-1"><a class="header-anchor" href="#方式2-绑定监听函数"><span>方式2：绑定监听函数</span></a></h4><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">dataListener</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;来自基座应用的数据&#39;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * 绑定监听函数，监听函数只有在数据变化时才会触发
 * dataListener: 绑定函数
 * autoTrigger: 在初次绑定监听函数时如果有缓存数据，是否需要主动触发一次，默认为false
 * !!!重要说明: 因为子应用是异步渲染的，而基座发送数据是同步的，
 * 如果在子应用渲染结束前基座应用发送数据，则在绑定监听函数前数据已经发送，在初始化后不会触发绑定函数，
 * 但这个数据会放入缓存中，此时可以设置autoTrigger为true主动触发一次监听函数来获取数据。
 */</span>
window<span class="token punctuation">.</span>microApp<span class="token punctuation">.</span><span class="token function">addDataListener</span><span class="token punctuation">(</span>dataListener<span class="token operator">:</span> Function<span class="token punctuation">,</span> autoTrigger<span class="token operator">?</span><span class="token operator">:</span> boolean<span class="token punctuation">)</span>

<span class="token comment">// 解绑监听函数</span>
window<span class="token punctuation">.</span>microApp<span class="token punctuation">.</span><span class="token function">removeDataListener</span><span class="token punctuation">(</span>dataListener<span class="token operator">:</span> Function<span class="token punctuation">)</span>

<span class="token comment">// 清空当前子应用的所有绑定函数(全局数据函数除外)</span>
window<span class="token punctuation">.</span>microApp<span class="token punctuation">.</span><span class="token function">clearDataListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="二、子应用向基座应用发送数据" tabindex="-1"><a class="header-anchor" href="#二、子应用向基座应用发送数据"><span>二、子应用向基座应用发送数据</span></a></h2><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// dispatch只接受对象作为参数</span>
window<span class="token punctuation">.</span>microApp<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;子应用发送的数据&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="三、基座应用向子应用发送数据" tabindex="-1"><a class="header-anchor" href="#三、基座应用向子应用发送数据"><span>三、基座应用向子应用发送数据</span></a></h2><p>基座应用向子应用发送数据有两种方式：</p><h4 id="方式1-通过data属性发送数据" tabindex="-1"><a class="header-anchor" href="#方式1-通过data属性发送数据"><span>方式1: 通过data属性发送数据</span></a></h4>`,16),v=n("p",null,"在React中我们需要引入一个polyfill。",-1),b=n("p",null,[s("在"),n("code",null,"<micro-app>"),s("元素所在的文件顶部添加polyfill"),n("code",null,"(注释也要复制)"),s("。")],-1),g=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js","data-title":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token doc-comment comment"},[s("/** "),n("span",{class:"token keyword"},"@jsxRuntime"),s(" classic */")]),s(`
`),n("span",{class:"token doc-comment comment"},[s("/** "),n("span",{class:"token keyword"},"@jsx"),s(" jsxCustomEvent */")]),s(`
`),n("span",{class:"token keyword"},"import"),s(" jsxCustomEvent "),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'@micro-zoe/micro-app/polyfill/jsx-custom-event'"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),h=n("p",null,[n("strong",null,"开始使用")],-1),f=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js","data-title":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token operator"},"<"),s("micro"),n("span",{class:"token operator"},"-"),s(`app
  name`),n("span",{class:"token operator"},"="),n("span",{class:"token string"},"'my-app'"),s(`
  url`),n("span",{class:"token operator"},"="),n("span",{class:"token string"},"'xx'"),s(`
  data`),n("span",{class:"token operator"},"="),n("span",{class:"token punctuation"},"{"),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("state"),n("span",{class:"token punctuation"},"."),s("dataForChild"),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token comment"},"// data只接受对象类型，采用严格对比(===)，当传入新的data对象时会重新发送"),s(`
`),n("span",{class:"token operator"},"/"),n("span",{class:"token operator"},">"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),j=n("p",null,"vue中和绑定普通属性方式一致。",-1),_=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js","data-title":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token operator"},"<"),s("template"),n("span",{class:"token operator"},">"),s(`
  `),n("span",{class:"token operator"},"<"),s("micro"),n("span",{class:"token operator"},"-"),s(`app
    name`),n("span",{class:"token operator"},"="),n("span",{class:"token string"},"'my-app'"),s(`
    url`),n("span",{class:"token operator"},"="),n("span",{class:"token string"},"'xx'"),s(`
    `),n("span",{class:"token operator"},":"),s("data"),n("span",{class:"token operator"},"="),n("span",{class:"token string"},"'dataForChild'"),s(),n("span",{class:"token comment"},"// data只接受对象类型，数据变化时会重新发送"),s(`
  `),n("span",{class:"token operator"},"/"),n("span",{class:"token operator"},">"),s(`
`),n("span",{class:"token operator"},"<"),n("span",{class:"token operator"},"/"),s("template"),n("span",{class:"token operator"},">"),s(`

`),n("span",{class:"token operator"},"<"),s("script"),n("span",{class:"token operator"},">"),s(`
`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"default"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token function"},"data"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token literal-property property"},"dataForChild"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token literal-property property"},"type"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'发送给子应用的数据'"),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token operator"},"<"),n("span",{class:"token operator"},"/"),s("script"),n("span",{class:"token operator"},">"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),y=c(`<h4 id="方式2-手动发送数据" tabindex="-1"><a class="header-anchor" href="#方式2-手动发送数据"><span>方式2: 手动发送数据</span></a></h4><p>手动发送数据需要通过<code>name</code>指定接受数据的子应用，此值和<code>&lt;micro-app&gt;</code>元素中的<code>name</code>一致。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> microApp <span class="token keyword">from</span> <span class="token string">&#39;@micro-zoe/micro-app&#39;</span>

<span class="token comment">// 发送数据给子应用 my-app，setData第二个参数只接受对象类型</span>
microApp<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token string">&#39;my-app&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;新的数据&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="四、基座应用获取来自子应用的数据" tabindex="-1"><a class="header-anchor" href="#四、基座应用获取来自子应用的数据"><span>四、基座应用获取来自子应用的数据</span></a></h2><p>基座应用获取来自子应用的数据有三种方式：</p><h4 id="方式1-直接获取数据-1" tabindex="-1"><a class="header-anchor" href="#方式1-直接获取数据-1"><span>方式1：直接获取数据</span></a></h4><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> microApp <span class="token keyword">from</span> <span class="token string">&#39;@micro-zoe/micro-app&#39;</span>

<span class="token keyword">const</span> childData <span class="token operator">=</span> microApp<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span>appName<span class="token punctuation">)</span> <span class="token comment">// 返回子应用的data数据</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="方式2-监听自定义事件-datachange" tabindex="-1"><a class="header-anchor" href="#方式2-监听自定义事件-datachange"><span>方式2: 监听自定义事件 (datachange)</span></a></h4>`,8),w=n("p",null,"在React中我们需要引入一个polyfill。",-1),x=n("p",null,[s("在"),n("code",null,"<micro-app>"),s("元素所在的文件顶部添加polyfill"),n("code",null,"(注释也要复制)"),s("。")],-1),A=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js","data-title":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token doc-comment comment"},[s("/** "),n("span",{class:"token keyword"},"@jsxRuntime"),s(" classic */")]),s(`
`),n("span",{class:"token doc-comment comment"},[s("/** "),n("span",{class:"token keyword"},"@jsx"),s(" jsxCustomEvent */")]),s(`
`),n("span",{class:"token keyword"},"import"),s(" jsxCustomEvent "),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'@micro-zoe/micro-app/polyfill/jsx-custom-event'"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),L=n("p",null,[n("strong",null,"开始使用")],-1),D=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js","data-title":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token operator"},"<"),s("micro"),n("span",{class:"token operator"},"-"),s(`app
  name`),n("span",{class:"token operator"},"="),n("span",{class:"token string"},"'my-app'"),s(`
  url`),n("span",{class:"token operator"},"="),n("span",{class:"token string"},"'xx'"),s(`
  `),n("span",{class:"token comment"},"// 数据在event.detail.data字段中，子应用每次发送数据都会触发datachange"),s(`
  onDataChange`),n("span",{class:"token operator"},"="),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"e"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(" console"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'来自子应用的数据：'"),n("span",{class:"token punctuation"},","),s(" e"),n("span",{class:"token punctuation"},"."),s("detail"),n("span",{class:"token punctuation"},"."),s("data"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token operator"},"/"),n("span",{class:"token operator"},">"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),C=n("p",null,"vue中监听方式和普通事件一致。",-1),F=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js","data-title":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token operator"},"<"),s("template"),n("span",{class:"token operator"},">"),s(`
  `),n("span",{class:"token operator"},"<"),s("micro"),n("span",{class:"token operator"},"-"),s(`app
    name`),n("span",{class:"token operator"},"="),n("span",{class:"token string"},"'my-app'"),s(`
    url`),n("span",{class:"token operator"},"="),n("span",{class:"token string"},"'xx'"),s(`
    `),n("span",{class:"token comment"},"// 数据在事件对象的detail.data字段中，子应用每次发送数据都会触发datachange"),s(`
    @datachange`),n("span",{class:"token operator"},"="),n("span",{class:"token string"},"'handleDataChange'"),s(`
  `),n("span",{class:"token operator"},"/"),n("span",{class:"token operator"},">"),s(`
`),n("span",{class:"token operator"},"<"),n("span",{class:"token operator"},"/"),s("template"),n("span",{class:"token operator"},">"),s(`

`),n("span",{class:"token operator"},"<"),s("script"),n("span",{class:"token operator"},">"),s(`
`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"default"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token literal-property property"},"methods"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token function"},"handleDataChange"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"e"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
      console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'来自子应用的数据：'"),n("span",{class:"token punctuation"},","),s(" e"),n("span",{class:"token punctuation"},"."),s("detail"),n("span",{class:"token punctuation"},"."),s("data"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token operator"},"<"),n("span",{class:"token operator"},"/"),s("script"),n("span",{class:"token operator"},">"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),G=c(`<h4 id="方式3-绑定监听函数" tabindex="-1"><a class="header-anchor" href="#方式3-绑定监听函数"><span>方式3: 绑定监听函数</span></a></h4><p>绑定监听函数需要通过<code>name</code>指定子应用，此值和<code>&lt;micro-app&gt;</code>元素中的<code>name</code>一致。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> microApp <span class="token keyword">from</span> <span class="token string">&#39;@micro-zoe/micro-app&#39;</span>

<span class="token keyword">function</span> <span class="token function">dataListener</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;来自子应用my-app的数据&#39;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * 绑定监听函数
 * appName: 应用名称
 * dataListener: 绑定函数
 * autoTrigger: 在初次绑定监听函数时如果有缓存数据，是否需要主动触发一次，默认为false
 */</span>
microApp<span class="token punctuation">.</span><span class="token function">addDataListener</span><span class="token punctuation">(</span>appName<span class="token operator">:</span> string<span class="token punctuation">,</span> <span class="token literal-property property">dataListener</span><span class="token operator">:</span> Function<span class="token punctuation">,</span> autoTrigger<span class="token operator">?</span><span class="token operator">:</span> boolean<span class="token punctuation">)</span>

<span class="token comment">// 解绑监听my-app子应用的函数</span>
microApp<span class="token punctuation">.</span><span class="token function">removeDataListener</span><span class="token punctuation">(</span>appName<span class="token operator">:</span> string<span class="token punctuation">,</span> <span class="token literal-property property">dataListener</span><span class="token operator">:</span> Function<span class="token punctuation">)</span>

<span class="token comment">// 清空所有监听appName子应用的函数</span>
microApp<span class="token punctuation">.</span><span class="token function">clearDataListener</span><span class="token punctuation">(</span>appName<span class="token operator">:</span> string<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="全局数据通信" tabindex="-1"><a class="header-anchor" href="#全局数据通信"><span>全局数据通信</span></a></h2><p>全局数据通信会向基座应用和所有子应用发送数据，在跨应用通信的场景中适用。</p><h4 id="发送全局数据" tabindex="-1"><a class="header-anchor" href="#发送全局数据"><span>发送全局数据</span></a></h4>`,6),T=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js","data-title":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(" microApp "),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'@micro-zoe/micro-app'"),s(`

`),n("span",{class:"token comment"},"// setGlobalData只接受对象作为参数"),s(`
microApp`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setGlobalData"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),n("span",{class:"token literal-property property"},"type"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'全局数据'"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),N=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js","data-title":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token comment"},"// setGlobalData只接受对象作为参数"),s(`
window`),n("span",{class:"token punctuation"},"."),s("microApp"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setGlobalData"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),n("span",{class:"token literal-property property"},"type"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'全局数据'"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),z=n("h4",{id:"获取全局数据",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#获取全局数据"},[n("span",null,"获取全局数据")])],-1),E=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js","data-title":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(" microApp "),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'@micro-zoe/micro-app'"),s(`

`),n("span",{class:"token comment"},"// 直接获取数据"),s(`
`),n("span",{class:"token keyword"},"const"),s(" globalData "),n("span",{class:"token operator"},"="),s(" microApp"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getGlobalData"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"// 返回全局数据"),s(`

`),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"dataListener"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"data"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'全局数据'"),n("span",{class:"token punctuation"},","),s(" data"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token doc-comment comment"},`/**
 * 绑定监听函数
 * dataListener: 绑定函数
 * autoTrigger: 在初次绑定监听函数时如果有缓存数据，是否需要主动触发一次，默认为false
 */`),s(`
microApp`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"addGlobalDataListener"),n("span",{class:"token punctuation"},"("),s("dataListener"),n("span",{class:"token operator"},":"),s(" Function"),n("span",{class:"token punctuation"},","),s(" autoTrigger"),n("span",{class:"token operator"},"?"),n("span",{class:"token operator"},":"),s(" boolean"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"// 解绑监听函数"),s(`
microApp`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"removeGlobalDataListener"),n("span",{class:"token punctuation"},"("),s("dataListener"),n("span",{class:"token operator"},":"),s(" Function"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"// 清空基座应用绑定的所有全局数据监听函数"),s(`
microApp`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"clearGlobalDataListener"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),R=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js","data-title":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token comment"},"// 直接获取数据"),s(`
`),n("span",{class:"token keyword"},"const"),s(" globalData "),n("span",{class:"token operator"},"="),s(" window"),n("span",{class:"token punctuation"},"."),s("microApp"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getGlobalData"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"// 返回全局数据"),s(`

`),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"dataListener"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"data"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'全局数据'"),n("span",{class:"token punctuation"},","),s(" data"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token doc-comment comment"},`/**
 * 绑定监听函数
 * dataListener: 绑定函数
 * autoTrigger: 在初次绑定监听函数时如果有缓存数据，是否需要主动触发一次，默认为false
 */`),s(`
window`),n("span",{class:"token punctuation"},"."),s("microApp"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"addGlobalDataListener"),n("span",{class:"token punctuation"},"("),s("dataListener"),n("span",{class:"token operator"},":"),s(" Function"),n("span",{class:"token punctuation"},","),s(" autoTrigger"),n("span",{class:"token operator"},"?"),n("span",{class:"token operator"},":"),s(" boolean"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"// 解绑监听函数"),s(`
window`),n("span",{class:"token punctuation"},"."),s("microApp"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"removeGlobalDataListener"),n("span",{class:"token punctuation"},"("),s("dataListener"),n("span",{class:"token operator"},":"),s(" Function"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"// 清空当前子应用绑定的所有全局数据监听函数"),s(`
window`),n("span",{class:"token punctuation"},"."),s("microApp"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"clearGlobalDataListener"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),V=c(`<h2 id="关闭沙箱后的通信方式" tabindex="-1"><a class="header-anchor" href="#关闭沙箱后的通信方式"><span>关闭沙箱后的通信方式</span></a></h2><p>沙箱关闭后，子应用默认的通信功能失效，此时可以通过手动注册通信对象实现一致的功能。</p><p><strong>注册方式：在基座应用中为子应用初始化通信对象</strong></p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> EventCenterForMicroApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@micro-zoe/micro-app&#39;</span>

<span class="token comment">// 注意：每个子应用根据appName单独分配一个通信对象</span>
window<span class="token punctuation">.</span>eventCenterForAppxx <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">EventCenterForMicroApp</span><span class="token punctuation">(</span>appName<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>子应用就可以通过注册的<code>eventCenterForAppxx</code>对象进行通信，其api和<code>window.microApp</code>一致，<em>基座通信方式没有任何变化。</em></p><p><strong>子应用通信方式：</strong></p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// 直接获取数据</span>
<span class="token keyword">const</span> data <span class="token operator">=</span> window<span class="token punctuation">.</span>eventCenterForAppxx<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 返回data数据</span>

<span class="token keyword">function</span> <span class="token function">dataListener</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;来自基座应用的数据&#39;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * 绑定监听函数
 * dataListener: 绑定函数
 * autoTrigger: 在初次绑定监听函数时如果有缓存数据，是否需要主动触发一次，默认为false
 */</span>
window<span class="token punctuation">.</span>eventCenterForAppxx<span class="token punctuation">.</span><span class="token function">addDataListener</span><span class="token punctuation">(</span>dataListener<span class="token operator">:</span> Function<span class="token punctuation">,</span> autoTrigger<span class="token operator">?</span><span class="token operator">:</span> boolean<span class="token punctuation">)</span>

<span class="token comment">// 解绑监听函数</span>
window<span class="token punctuation">.</span>eventCenterForAppxx<span class="token punctuation">.</span><span class="token function">removeDataListener</span><span class="token punctuation">(</span>dataListener<span class="token operator">:</span> Function<span class="token punctuation">)</span>

<span class="token comment">// 清空当前子应用的所有绑定函数(全局数据函数除外)</span>
window<span class="token punctuation">.</span>eventCenterForAppxx<span class="token punctuation">.</span><span class="token function">clearDataListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// 子应用向基座应用发送数据，只接受对象作为参数</span>
window<span class="token punctuation">.</span>eventCenterForAppxx<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;子应用发送的数据&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">提示</p><ol><li>data只接受对象类型</li><li>数据变化时会进行严格对比(===)，相同的data对象不会触发更新。</li><li>在子应用卸载时，子应用中所有的数据绑定函数会自动解绑，基座应用中的数据解绑需要开发者手动处理。</li></ol></div>`,8);function B(I,M){const t=p("TabPanel"),l=p("Tabs"),o=p("CodeGroupItem"),i=p("CodeGroup");return u(),d("div",null,[m,a(l,null,{default:e(()=>[a(t,{title:"React"},{default:e(()=>[v,b,g,h,f]),_:1}),a(t,{title:"Vue"},{default:e(()=>[j,_]),_:1})]),_:1}),y,a(l,null,{default:e(()=>[a(t,{title:"React"},{default:e(()=>[w,x,A,L,D]),_:1}),a(t,{title:"Vue"},{default:e(()=>[C,F]),_:1})]),_:1}),G,a(i,null,{default:e(()=>[a(o,{title:"基座应用"},{default:e(()=>[T]),_:1}),a(o,{title:"子应用"},{default:e(()=>[N]),_:1})]),_:1}),z,a(i,null,{default:e(()=>[a(o,{title:"基座应用"},{default:e(()=>[E]),_:1}),a(o,{title:"子应用"},{default:e(()=>[R]),_:1})]),_:1}),V])}const S=r(k,[["render",B],["__file","data.html.vue"]]);export{S as default};
