import{_ as u,r as t,o as d,c as k,b as a,w as e,d as s,e as n,a as p}from"./app-Js4EkCke.js";const m={},v=p(`<p>关闭虚拟路由后，没有了路由隔离后的处理方式会复杂很多，子应用将基于浏览器地址进行渲染，此时需要设置子应用的基础路由。</p><h4 id="路由类型约束" tabindex="-1"><a class="header-anchor" href="#路由类型约束"><span>路由类型约束</span></a></h4><ul><li>1、主应用是hash路由，子应用也必须是hash路由</li><li>2、主应用是history路由，子应用可以是hash或history路由</li></ul><h4 id="基础路由" tabindex="-1"><a class="header-anchor" href="#基础路由"><span>基础路由</span></a></h4><p><strong>作用：</strong></p><p>通常主应用和子应用各有一套路由系统，为了防止冲突，主应用需要分配一个路由给子应用，称之为基础路由，子应用可以在这个路由下渲染，但不能超出这个路由的范围，这就是基础路由的作用。</p><p><strong>使用方式</strong></p><p>主应用中通过设置 <code>&lt;micro-app&gt;</code>的<code>baseroute</code>属性下发，子应用通过<code>window.__MICRO_APP_BASE_ROUTE__</code>获取此值并设置基础路由。</p><p><strong>注意点：</strong></p><ul><li>1、如果主应用是history路由，子应用是hash路由，不需要设置基础路由baseroute</li><li>2、如果子应用只有一个页面，没有使用<code>react-router</code>，<code>vue-router</code>之类，也不需要设置基础路由baseroute</li><li>3、vue-router在hash模式下无法通过base设置基础路由，需要创建一个空的路由页面，将其它路由作为它的children，具体设置如下：</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> RootApp <span class="token keyword">from</span> <span class="token string">&#39;./root-app.vue&#39;</span>

<span class="token keyword">const</span> routes <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">path</span><span class="token operator">:</span> window<span class="token punctuation">.</span>__MICRO_APP_BASE_ROUTE__ <span class="token operator">||</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">component</span><span class="token operator">:</span> RootApp<span class="token punctuation">,</span>
      <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token comment">// 其他的路由都写到这里</span>
      <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>root-app.vue</code>内容如下：</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-view</span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例</strong></p>`,14),g=s("div",{class:"language-javascript line-numbers-mode","data-ext":"js","data-title":"js"},[s("pre",{class:"language-javascript"},[s("code",null,[s("span",{class:"token comment"},"// router.js"),n(`
`),s("span",{class:"token keyword"},"import"),n(),s("span",{class:"token punctuation"},"{"),n(" BrowserRouter"),s("span",{class:"token punctuation"},","),n(" Switch"),s("span",{class:"token punctuation"},","),n(" Route "),s("span",{class:"token punctuation"},"}"),n(),s("span",{class:"token keyword"},"from"),n(),s("span",{class:"token string"},"'react-router-dom'"),n(`
`),s("span",{class:"token keyword"},"import"),n(" ChildPage "),s("span",{class:"token keyword"},"from"),n(),s("span",{class:"token string"},"'./child-page'"),n(`

`),s("span",{class:"token keyword"},"export"),n(),s("span",{class:"token keyword"},"default"),n(),s("span",{class:"token keyword"},"function"),n(),s("span",{class:"token function"},"AppRoute"),n(),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token punctuation"},"{"),n(`
  `),s("span",{class:"token keyword"},"return"),n(),s("span",{class:"token punctuation"},"("),n(`
    `),s("span",{class:"token operator"},"<"),n("BrowserRouter"),s("span",{class:"token operator"},">"),n(`
      `),s("span",{class:"token operator"},"<"),n("Switch"),s("span",{class:"token operator"},">"),n(`
        `),s("span",{class:"token comment"},"// 非严格匹配，/child/* 都指向ChildPage组件"),n(`
        `),s("span",{class:"token comment"},"// /child 就是分配给子应用的基础路由baseroute"),n(`
        `),s("span",{class:"token operator"},"<"),n("Route path"),s("span",{class:"token operator"},"="),s("span",{class:"token string"},"'/child'"),s("span",{class:"token operator"},">"),n(`
          `),s("span",{class:"token operator"},"<"),n("ChildPage "),s("span",{class:"token operator"},"/"),s("span",{class:"token operator"},">"),n(`
        `),s("span",{class:"token operator"},"<"),s("span",{class:"token operator"},"/"),n("Route"),s("span",{class:"token operator"},">"),n(`
      `),s("span",{class:"token operator"},"<"),s("span",{class:"token operator"},"/"),n("Switch"),s("span",{class:"token operator"},">"),n(`
    `),s("span",{class:"token operator"},"<"),s("span",{class:"token operator"},"/"),n("BrowserRouter"),s("span",{class:"token operator"},">"),n(`
  `),s("span",{class:"token punctuation"},")"),n(`
`),s("span",{class:"token punctuation"},"}"),n(`

`),s("span",{class:"token comment"},"// child-page.js"),n(`
`),s("span",{class:"token keyword"},"export"),n(),s("span",{class:"token keyword"},"function"),n(),s("span",{class:"token function"},"ChildPage"),n(),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token punctuation"},"{"),n(`
  `),s("span",{class:"token keyword"},"return"),n(),s("span",{class:"token punctuation"},"("),n(`
    `),s("span",{class:"token operator"},"<"),n("div"),s("span",{class:"token operator"},">"),n(`
      `),s("span",{class:"token operator"},"<"),n("h1"),s("span",{class:"token operator"},">"),n("子应用"),s("span",{class:"token operator"},"<"),s("span",{class:"token operator"},"/"),n("h1"),s("span",{class:"token operator"},">"),n(`
      `),s("span",{class:"token operator"},"<"),n("micro"),s("span",{class:"token operator"},"-"),n("app name"),s("span",{class:"token operator"},"="),s("span",{class:"token string"},"'child-app'"),n(" url"),s("span",{class:"token operator"},"="),s("span",{class:"token string"},"'http://localhost:3000/'"),n(" baseroute"),s("span",{class:"token operator"},"="),s("span",{class:"token string"},"'/child'"),s("span",{class:"token operator"},">"),s("span",{class:"token operator"},"<"),s("span",{class:"token operator"},"/"),n("micro"),s("span",{class:"token operator"},"-"),n("app"),s("span",{class:"token operator"},">"),n(`
    `),s("span",{class:"token operator"},"<"),s("span",{class:"token operator"},"/"),n("div"),s("span",{class:"token operator"},">"),n(`
  `),s("span",{class:"token punctuation"},")"),n(`
`),s("span",{class:"token punctuation"},"}"),n(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),h=s("div",{class:"language-javascript line-numbers-mode","data-ext":"js","data-title":"js"},[s("pre",{class:"language-javascript"},[s("code",null,[s("span",{class:"token keyword"},"import"),n(),s("span",{class:"token punctuation"},"{"),n(" BrowserRouter"),s("span",{class:"token punctuation"},","),n(" Switch"),s("span",{class:"token punctuation"},","),n(" Route "),s("span",{class:"token punctuation"},"}"),n(),s("span",{class:"token keyword"},"from"),n(),s("span",{class:"token string"},"'react-router-dom'"),n(`

`),s("span",{class:"token keyword"},"export"),n(),s("span",{class:"token keyword"},"default"),n(),s("span",{class:"token keyword"},"function"),n(),s("span",{class:"token function"},"AppRoute"),n(),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token punctuation"},"{"),n(`
  `),s("span",{class:"token keyword"},"return"),n(),s("span",{class:"token punctuation"},"("),n(`
    `),s("span",{class:"token comment"},"// 👇 设置基础路由，子应用可以通过window.__MICRO_APP_BASE_ROUTE__获取主应用下发的baseroute，如果没有设置baseroute属性，则此值默认为空字符串"),n(`
    `),s("span",{class:"token operator"},"<"),n("BrowserRouter basename"),s("span",{class:"token operator"},"="),s("span",{class:"token punctuation"},"{"),n("window"),s("span",{class:"token punctuation"},"."),n("__MICRO_APP_BASE_ROUTE__ "),s("span",{class:"token operator"},"||"),n(),s("span",{class:"token string"},"'/'"),s("span",{class:"token punctuation"},"}"),s("span",{class:"token operator"},">"),n(`
      `),s("span",{class:"token operator"},"..."),n(`
    `),s("span",{class:"token operator"},"<"),s("span",{class:"token operator"},"/"),n("BrowserRouter"),s("span",{class:"token operator"},">"),n(`
  `),s("span",{class:"token punctuation"},")"),n(`
`),s("span",{class:"token punctuation"},"}"),n(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),b=s("div",{class:"language-javascript line-numbers-mode","data-ext":"js","data-title":"js"},[s("pre",{class:"language-javascript"},[s("code",null,[s("span",{class:"token comment"},"// router.js"),n(`
`),s("span",{class:"token keyword"},"import"),n(" Vue "),s("span",{class:"token keyword"},"from"),n(),s("span",{class:"token string"},"'vue'"),n(`
`),s("span",{class:"token keyword"},"import"),n(" VueRouter "),s("span",{class:"token keyword"},"from"),n(),s("span",{class:"token string"},"'vue-router'"),n(`
`),s("span",{class:"token keyword"},"import"),n(" ChildPage "),s("span",{class:"token keyword"},"from"),n(),s("span",{class:"token string"},"'./child-page.vue'"),n(`

Vue`),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"use"),s("span",{class:"token punctuation"},"("),n("VueRouter"),s("span",{class:"token punctuation"},")"),n(`

`),s("span",{class:"token keyword"},"const"),n(" routes "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token punctuation"},"["),n(`
  `),s("span",{class:"token punctuation"},"{"),n(`
    `),s("span",{class:"token comment"},"// /child/* 都指向ChildPage组件"),n(`
    `),s("span",{class:"token literal-property property"},"path"),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},"'/child/*'"),s("span",{class:"token punctuation"},","),n("  "),s("span",{class:"token comment"},"// vue-router@4.x path的写法为：'/child/:page*'"),n(`
    `),s("span",{class:"token literal-property property"},"name"),s("span",{class:"token operator"},":"),n(),s("span",{class:"token string"},"'child'"),s("span",{class:"token punctuation"},","),n(`
    `),s("span",{class:"token literal-property property"},"component"),s("span",{class:"token operator"},":"),n(" ChildPage"),s("span",{class:"token punctuation"},","),n(`
  `),s("span",{class:"token punctuation"},"}"),s("span",{class:"token punctuation"},","),n(`
`),s("span",{class:"token punctuation"},"]"),n(`

`),s("span",{class:"token keyword"},"export"),n(),s("span",{class:"token keyword"},"default"),n(` routes

`),s("span",{class:"token comment"},"// child-page.vue"),n(`
`),s("span",{class:"token operator"},"<"),n("template"),s("span",{class:"token operator"},">"),n(`
  `),s("span",{class:"token operator"},"<"),n("div"),s("span",{class:"token operator"},">"),n(`
    `),s("span",{class:"token operator"},"<"),n("h1"),s("span",{class:"token operator"},">"),n("子应用"),s("span",{class:"token operator"},"<"),s("span",{class:"token operator"},"/"),n("h1"),s("span",{class:"token operator"},">"),n(`
    `),s("span",{class:"token operator"},"<"),n("micro"),s("span",{class:"token operator"},"-"),n("app name"),s("span",{class:"token operator"},"="),s("span",{class:"token string"},"'child-app'"),n(" url"),s("span",{class:"token operator"},"="),s("span",{class:"token string"},"'http://localhost:3000/'"),n(" baseroute"),s("span",{class:"token operator"},"="),s("span",{class:"token string"},"'/child'"),s("span",{class:"token operator"},">"),s("span",{class:"token operator"},"<"),s("span",{class:"token operator"},"/"),n("micro"),s("span",{class:"token operator"},"-"),n("app"),s("span",{class:"token operator"},">"),n(`
  `),s("span",{class:"token operator"},"<"),s("span",{class:"token operator"},"/"),n("div"),s("span",{class:"token operator"},">"),n(`
`),s("span",{class:"token operator"},"<"),s("span",{class:"token operator"},"/"),n("template"),s("span",{class:"token operator"},">"),n(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),_=s("div",{class:"language-javascript line-numbers-mode","data-ext":"js","data-title":"js"},[s("pre",{class:"language-javascript"},[s("code",null,[s("span",{class:"token keyword"},"import"),n(" Vue "),s("span",{class:"token keyword"},"from"),n(),s("span",{class:"token string"},"'vue'"),n(`
`),s("span",{class:"token keyword"},"import"),n(" VueRouter "),s("span",{class:"token keyword"},"from"),n(),s("span",{class:"token string"},"'vue-router'"),n(`
`),s("span",{class:"token keyword"},"import"),n(" routes "),s("span",{class:"token keyword"},"from"),n(),s("span",{class:"token string"},"'./router'"),n(`

`),s("span",{class:"token keyword"},"const"),n(" router "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token keyword"},"new"),n(),s("span",{class:"token class-name"},"VueRouter"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},"{"),n(`
  `),s("span",{class:"token comment"},"// 👇 设置基础路由，子应用可以通过window.__MICRO_APP_BASE_ROUTE__获取主应用下发的baseroute，如果没有设置baseroute属性，则此值默认为空字符串"),n(`
  `),s("span",{class:"token literal-property property"},"base"),s("span",{class:"token operator"},":"),n(" window"),s("span",{class:"token punctuation"},"."),n("__MICRO_APP_BASE_ROUTE__ "),s("span",{class:"token operator"},"||"),n(),s("span",{class:"token string"},"'/'"),s("span",{class:"token punctuation"},","),n(`
  routes`),s("span",{class:"token punctuation"},","),n(`
`),s("span",{class:"token punctuation"},"}"),s("span",{class:"token punctuation"},")"),n(`

`),s("span",{class:"token keyword"},"let"),n(" app "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token keyword"},"new"),n(),s("span",{class:"token class-name"},"Vue"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},"{"),n(`
  router`),s("span",{class:"token punctuation"},","),n(`
  `),s("span",{class:"token function-variable function"},"render"),s("span",{class:"token operator"},":"),n(),s("span",{class:"token parameter"},"h"),n(),s("span",{class:"token operator"},"=>"),n(),s("span",{class:"token function"},"h"),s("span",{class:"token punctuation"},"("),n("App"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},","),n(`
`),s("span",{class:"token punctuation"},"}"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"$mount"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string"},"'#app'"),s("span",{class:"token punctuation"},")"),n(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),w=s("div",{class:"custom-container tip"},[s("p",{class:"custom-container-title"},"提示"),s("p",null,"vue-router@4.x设置base的方式请查看 https://next.router.vuejs.org/")],-1),y=s("h2",{id:"应用之间跳转",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#应用之间跳转"},[s("span",null,"应用之间跳转")])],-1),x={href:"/zh/jump",target:"_blank",rel:"noopener noreferrer"},f=p(`<h2 id="url属性和子应用路由的关系" tabindex="-1"><a class="header-anchor" href="#url属性和子应用路由的关系"><span>url属性和子应用路由的关系</span></a></h2><p>答：没有关系！</p><p>micro-app的url属性只是html的地址，它的作用就是加载html资源。</p><h4 id="子应用不会根据micro-app的url属性渲染对应的页面-而是根据浏览器地址渲染对应的页面。" tabindex="-1"><a class="header-anchor" href="#子应用不会根据micro-app的url属性渲染对应的页面-而是根据浏览器地址渲染对应的页面。"><span>子应用不会根据micro-app的url属性渲染对应的页面，而是根据浏览器地址渲染对应的页面。</span></a></h4><p><strong>举个栗子 🌰 :</strong></p><p>浏览器地址为：<code>http://localhost:3000/page1/</code>，此时路由地址为<code>page1</code>。</p><p>主应用会匹配<code>page1</code>并渲染对应的组件，子应用也是一样，浏览器地址会同时影响到主应用和子应用，因为每个应用都有一套自己的路由系统，它们是可以共存的，不会冲突。</p><p>此时我们要渲染子应用<code>http://www.xxx.com/</code>的<code>page1</code>页面，那么micro-app的url属性填写的是<code>http://www.xxx.com/</code>，而不是<code>http://www.xxx.com/page1/</code>。</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>micro-app</span> <span class="token attr-name">url</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>http://www.xxx.com/<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>micro-app</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>子应用加载完成后会根据浏览器的地址<code>page1</code>匹配并渲染对应的页面。</p><p>同理，页面参数和hash也是以浏览器为准。</p><p><strong>栗子2 🌰 :</strong></p><p>子应用是hash路由，我们要渲染子应用的page1页面，那么在micro-app的url属性上设置hash值是无效的，<code>#/page1</code>应该添加到浏览器地址上。</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token comment">&lt;!-- ❌ 这里的#/page1是无效的，应该添加到浏览器地址上 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>micro-app</span> <span class="token attr-name">url</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>http://www.xxx.com/#/page1<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>micro-app</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- ✔️ 这个url才是正确的 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>micro-app</span> <span class="token attr-name">url</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>http://www.xxx.com/<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>micro-app</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>栗子3 🌰 :</strong></p><p>主应用是history路由，子应用是hash路由，我们要跳转主应用的<code>my-app</code>页面，页面中嵌入子应用，我们要展现子应用的<code>page1</code>页面。</p><p>那么浏览器地址应该为：<code>域名/my-page#/page1</code>，我们在主应用中跳转<code>my-app</code>页面的参数为：<code>router.push(&#39;/my-page#/page1&#39;)</code></p><p>此时流程为：主应用匹配到<code>/my-page</code>路径并渲染<code>my-app</code>页面，因为<code>my-app</code>页面中嵌入了子应用，此时子应用开始加载并渲染，子应用在渲染时会匹配到<code>#/page1</code>并渲染<code>page1</code>页面。</p><p>micro-app配置如下：</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token comment">&lt;!-- 此时不需要设置baseroute --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>micro-app</span> <span class="token attr-name">url</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>http://www.xxx.com/index.html<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>micro-app</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>栗子4 🌰 :</strong></p><p>主应用是history路由，子应用也是history路由，我们要跳转主应用的<code>my-app</code>页面，<code>my-app</code>页面中嵌入子应用，我们要展现子应用的<code>page1</code>页面。</p><p>那么浏览器地址应该为：<code>域名/my-page/page1</code>，我们在主应用中跳转的参数为：<code>router.push(&#39;/my-page/page1&#39;)</code></p><p>此时流程为：主应用匹配到<code>/my-page</code>路径并渲染<code>my-app</code>页面，因为<code>my-app</code>页面中嵌入了子应用，此时子应用开始加载并渲染，子应用在渲染时会匹配到<code>/my-page/page1</code>并渲染<code>page1</code>页面。</p><p>micro-app配置如下：</p>`,25),R={href:"/zh/start",target:"_blank",rel:"noopener noreferrer"},j=p(`<div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token comment">&lt;!-- 子应用通过baseroute设置基础路由，路由 /page1 变为 /my-page/page1 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>micro-app</span> <span class="token attr-name">url</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>http://www.xxx.com/index.html<span class="token punctuation">&#39;</span></span> <span class="token attr-name">baseroute</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>/my-page<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>micro-app</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">提示</p><p>如果你看到这里还是无法正确设置路由，那么将主应用设置为history路由，子应用设置为hash路由，可以一劳永逸解决所有问题，此时不需要设置baseroute，也不需要修改主应用和子应用的任何路由设置。</p></div>`,2);function P(C,A){const o=t("CodeGroupItem"),c=t("CodeGroup"),l=t("TabPanel"),i=t("Tabs"),r=t("ExternalLinkIcon");return d(),k("div",null,[v,a(i,null,{default:e(()=>[a(l,{title:"React"},{default:e(()=>[a(c,null,{default:e(()=>[a(o,{title:"主应用"},{default:e(()=>[g]),_:1}),a(o,{title:"子应用"},{default:e(()=>[h]),_:1})]),_:1})]),_:1}),a(l,{title:"Vue"},{default:e(()=>[a(c,null,{default:e(()=>[a(o,{title:"主应用"},{default:e(()=>[b]),_:1}),a(o,{title:"子应用"},{default:e(()=>[_]),_:1})]),_:1})]),_:1})]),_:1}),w,y,s("p",null,[s("a",x,[n("应用之间跳转"),a(r)])]),f,s("p",null,[n("这就是在"),s("a",R,[n("快速开始"),a(r)]),n("一章中提到的案例。")]),j])}const E=u(m,[["render",P],["__file","browser-router.html.vue"]]);export{E as default};
